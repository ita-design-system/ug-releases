{
	"version": 3,
	"file": "briks_skin_extension.css",
	"sources": [
		"briks_skin_extension.scss",
		"../../../../private/var/folders/8r/rwm5xhwd3s33rk3zsg2k09r40000gn/T/jekyll-remote-theme-20230328-8682-9hcv6n/_sass/briks/_core.scss",
		"../../../../private/var/folders/8r/rwm5xhwd3s33rk3zsg2k09r40000gn/T/jekyll-remote-theme-20230328-8682-9hcv6n/_sass/briks/engine/_variables.scss",
		"../../../../private/var/folders/8r/rwm5xhwd3s33rk3zsg2k09r40000gn/T/jekyll-remote-theme-20230328-8682-9hcv6n/_sass/briks/engine/_functions-system.scss",
		"../../../../private/var/folders/8r/rwm5xhwd3s33rk3zsg2k09r40000gn/T/jekyll-remote-theme-20230328-8682-9hcv6n/_sass/briks/engine/_functions-usage.scss",
		"../../../../private/var/folders/8r/rwm5xhwd3s33rk3zsg2k09r40000gn/T/jekyll-remote-theme-20230328-8682-9hcv6n/_sass/briks/engine/_mixins.scss",
		"../../../../private/var/folders/8r/rwm5xhwd3s33rk3zsg2k09r40000gn/T/jekyll-remote-theme-20230328-8682-9hcv6n/_sass/briks/settings/tokens/_ucar.scss",
		"../../../../private/var/folders/8r/rwm5xhwd3s33rk3zsg2k09r40000gn/T/jekyll-remote-theme-20230328-8682-9hcv6n/_sass/briks/engine/_boot.scss",
		"_sass/_skin_extension.scss",
		"../../../../private/var/folders/8r/rwm5xhwd3s33rk3zsg2k09r40000gn/T/jekyll-remote-theme-20230328-8682-9hcv6n/_sass/briks/_components.scss"
	],
	"sourcesContent": [
		"/*\n    POINT D'ENTRÉE EXTENSION\n    Placer le chemin du fichier dans le fichier _config.yml de LibDoc\n*/\n\n/*\n    CORE\n    Fonctionnalités principales \n    Inclure briks/_core.scss pour obtenir les fonctions helpers et les mixins.\n    Aucune déclaration CSS n'est générée à partir de ce fichier.\n*/\n@import 'briks/core';\n/*\n    DESIGN TOKENS\n    Fichier SASS contenant les design tokens du projet\n*/\n@import 'briks/settings/tokens/ucar';\n/*\n    CONFIGURATION DE L'EXTENSION DU COMPOSANT C-SKIN\n    Requiert briks/_core.scss\n    Imports du fichier de configuration c-skin.\n    Le fichiers SASS de l'extension est dans le répertoire _sass de ce dépôt\n*/\n@import 'skin_extension';\n\n// /*\n//     GÉNÉRATEUR DE COMPOSANTS\n//     Requiert  briks/_core.scss\n//     Génère toutes les déclarations CSS des composants\n// */\n@import 'briks/components';\n",
		"// Include this file to get all Briks features\n// Including the file only does not generate any CSS declaration\n\n/**\n    CORE\n    Essentials core functions and mixins\n*/\n@import 'engine/variables';\n@import 'engine/functions-system';\n@import 'engine/functions-usage';\n@import 'engine/mixins';\n",
		"/*\n    INITIALIZATIONS\n*/\n$briks-screens: ();\n// $briks-screen-names: ();\n// $briks-font-families: ();\n\n/*\n    Precomputed linear color channel values, for use in contrast calculations.\n    See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n    Algorithm, for c in 0 to 255:\n    f(c) {\n      c = c / 255;\n      return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n    }\n    This lookup table is needed since there is no `pow` in SASS.\n*/\n$linear-channel-values: 0 0.0003035269835488375 0.000607053967097675 0.0009105809506465125 0.00121410793419535 0.0015176349177441874 0.001821161901293025 0.0021246888848418626 0.0024282158683907 0.0027317428519395373 0.003035269835488375 0.003346535763899161 0.003676507324047436 0.004024717018496307 0.004391442037410293 0.004776953480693729 0.005181516702338386 0.005605391624202723 0.006048833022857054 0.006512090792594475 0.006995410187265387 0.007499032043226175 0.008023192985384994 0.008568125618069307 0.009134058702220787 0.00972121732023785 0.010329823029626936 0.010960094006488246 0.011612245179743885 0.012286488356915872 0.012983032342173012 0.013702083047289686 0.014443843596092545 0.01520851442291271 0.01599629336550963 0.016807375752887384 0.017641954488384078 0.018500220128379697 0.019382360956935723 0.0202885630566524 0.021219010376003555 0.022173884793387385 0.02315336617811041 0.024157632448504756 0.02518685962736163 0.026241221894849898 0.027320891639074894 0.028426039504420793 0.0295568344378088 0.030713443732993635 0.03189603307301153 0.033104766570885055 0.03433980680868217 0.03560131487502034 0.03688945040110004 0.0382043715953465 0.03954623527673284 0.04091519690685319 0.042311410620809675 0.043735029256973465 0.04518620438567554 0.046665086336880095 0.04817182422688942 0.04970656598412723 0.05126945837404324 0.052860647023180246 0.05448027644244237 0.05612849004960009 0.05780543019106723 0.0595112381629812 0.06124605423161761 0.06301001765316767 0.06480326669290577 0.06662593864377289 0.06847816984440017 0.07036009569659588 0.07227185068231748 0.07421356838014963 0.07618538148130785 0.07818742180518633 0.08021982031446832 0.0822827071298148 0.08437621154414882 0.08650046203654976 0.08865558628577294 0.09084171118340768 0.09305896284668745 0.0953074666309647 0.09758734714186246 0.09989872824711389 0.10224173308810132 0.10461648409110419 0.10702310297826761 0.10946171077829933 0.1119324278369056 0.11443537382697373 0.11697066775851084 0.11953842798834562 0.12213877222960187 0.12477181756095049 0.12743768043564743 0.1301364766903643 0.13286832155381798 0.13563332965520566 0.13843161503245183 0.14126329114027164 0.14412847085805777 0.14702726649759498 0.14995978981060856 0.15292615199615017 0.1559264637078274 0.1589608350608804 0.162029375639111 0.1651321945016676 0.16826940018969075 0.1714411007328226 0.17464740365558504 0.17788841598362912 0.18116424424986022 0.184474994500441 0.18782077230067787 0.19120168274079138 0.1946178304415758 0.19806931955994886 0.20155625379439707 0.20507873639031693 0.20863687014525575 0.21223075741405523 0.21586050011389926 0.2195261997292692 0.2232279573168085 0.22696587351009836 0.23074004852434915 0.23455058216100522 0.238397573812271 0.24228112246555486 0.24620132670783548 0.25015828472995344 0.25415209433082675 0.2581828529215958 0.26225065752969623 0.26635560480286247 0.2704977910130658 0.27467731206038465 0.2788942634768104 0.2831487404299921 0.2874408377269175 0.29177064981753587 0.2961382707983211 0.3005437944157765 0.3049873140698863 0.30946892281750854 0.31398871337571754 0.31854677812509186 0.32314320911295075 0.3277780980565422 0.33245153634617935 0.33716361504833037 0.3419144249086609 0.3467040563550296 0.35153259950043936 0.3564001441459435 0.3613067797835095 0.3662525955988395 0.3712376804741491 0.3762621229909065 0.38132601143253014 0.386429433787049 0.39157247774972326 0.39675523072562685 0.4019777798321958 0.4072402119017367 0.41254261348390375 0.4178850708481375 0.4232676699860717 0.4286904966139066 0.43415363617474895 0.4396571738409188 0.44520119451622786 0.45078578283822346 0.45641102318040466 0.4620769996544071 0.467783796112159 0.47353149614800955 0.4793201831008268 0.4851499400560704 0.4910208498478356 0.4969329950608704 0.5028864580325687 0.5088813208549338 0.5149176653765214 0.5209955732043543 0.5271151257058131 0.5332764040105052 0.5394794890121072 0.5457244613701866 0.5520114015120001 0.5583403896342679 0.5647115057049292 0.5711248294648731 0.5775804404296506 0.5840784178911641 0.5906188409193369 0.5972017883637634 0.6038273388553378 0.6104955708078648 0.6172065624196511 0.6239603916750761 0.6307571363461468 0.6375968739940326 0.6444796819705821 0.6514056374198242 0.6583748172794485 0.665387298282272 0.6724431569576875 0.6795424696330938 0.6866853124353135 0.6938717612919899 0.7011018919329731 0.7083757798916868 0.7156935005064807 0.7230551289219693 0.7304607400903537 0.7379104087727308 0.7454042095403874 0.7529422167760779 0.7605245046752924 0.768151147247507 0.7758222183174236 0.7835377915261935 0.7912979403326302 0.799102738014409 0.8069522576692516 0.8148465722161012 0.8227857543962835 0.8307698767746546 0.83879901174074 0.846873231509858 0.8549926081242338 0.8631572134541023 0.8713671191987972 0.8796223968878317 0.8879231178819663 0.8962693533742664 0.9046611743911496 0.9130986517934192 0.9215818562772946 0.9301108583754237 0.938685728457888 0.9473065367331999 0.9559733532492861 0.9646862478944651 0.9734452903984125 0.9822505503331171 0.9911020971138298 1;\n\n$briks-luminance-method-helper: (\n    1: 'Weighted Euclidean Distance in 3D RGB Space <a href=\\'http://alienryderflex.com/hsp.html\\' target=\\'_blank\\'>http://alienryderflex.com/hsp.html</a>',\n    2: 'Web Content Accessibility Guidelines (WCAG) 2.0 <a href=\\'https://www.w3.org/TR/WCAG20/\\' target=\\'_blank\\'>https://www.w3.org/TR/WCAG20/</a>',\n    3: 'Luma sRGB <a href=\\'https://en.wikipedia.org/wiki/Rec._709\\' target=\\'_blank\\'>https://en.wikipedia.org/wiki/Rec._709</a>'\n);\n/*\n    BRIKS SCOPE\n    List of components with their associated properties \n*/\n$briks-scope: (\n    // System properties\n    briks_specific: (\n        content: true,\n        selector: true,\n        pseudo-classes: true,\n        pseudo-elements: true,\n        --ita-fraction: true,\n        --ita-gap: true,\n        --ita-total-amount-of-fractions: true,\n        --ita-item-default-width: true,\n        --ita-item-offset: true\n    ),\n    // Associated properties with c-dis\n    dis: (\n        align-items: true,\n        backface-visibility: true,\n        clear: true,\n        display: true,\n        justify-content: true,\n        flex: true,\n        flex-basis: true,\n        flex-direction: true,\n        flex-flow: true,\n        flex-shrink: true,\n        flex-wrap: true,\n        float: true,\n        gap: true,\n        grid-gap: true,\n        grid: true,\n        grid-area: true,\n        grid-auto-columns: true,\n        grid-auto-flow: true,\n        grid-auto-rows: true,\n        grid-column: true,\n        grid-column-end: true,\n        grid-column-start: true,\n        grid-row: true,\n        grid-row-end: true,\n        grid-row-start: true,\n        grid-template: true,\n        grid-template-areas: true,\n        grid-template-columns: true,\n        grid-template-rows: true,\n        row-gap: true,\n        place-content: true,\n        place-items: true,\n        place-self: true,\n        table-layout: true,\n        visibility: true,\n        -webkit-box-orient: true,\n        -webkit-line-clamp: true,\n    ),\n    // Associated properties with c-dim\n    dim: (\n        align-self: true,\n        aspect-ratio: true,\n        box-sizing: true,\n        flex-grow: true,\n        height: true,\n        justify-self: true,\n        margin: true,\n        margin-block: true,\n        margin-block-end: true,\n        margin-block-start: true,\n        margin-bottom: true,\n        margin-inline: true,\n        margin-inline-end: true,\n        margin-inline-start: true,\n        margin-left: true,\n        margin-right: true,\n        margin-top: true,\n        max-block-size: true,\n        max-height: true,\n        max-inline-size: true,\n        max-width: true,\n        min-block-size: true,\n        min-height: true,\n        min-inline-size: true,\n        min-width: true,\n        object-fit: true,\n        object-position: true,\n        order: true,\n        overflow: true,\n        overflow-anchor: true,\n        overflow-block: true,\n        overflow-clip-margin: true,\n        overflow-inline: true,\n        overflow-wrap: true,\n        overflow-x: true,\n        overflow-y: true,\n        overscroll-behavior: true,\n        overscroll-behavior-block: true,\n        overscroll-behavior-inline: true,\n        overscroll-behavior-x: true,\n        overscroll-behavior-y: true,\n        padding: true,\n        padding-block: true,\n        padding-block-end: true,\n        padding-block-start: true,\n        padding-bottom: true,\n        padding-inline: true,\n        padding-inline-end: true,\n        padding-inline-start: true,\n        padding-left: true,\n        padding-right: true,\n        padding-top: true,\n        scroll-behavior: true,\n        scroll-margin: true,\n        scroll-margin-block: true,\n        scroll-margin-block-end: true,\n        scroll-margin-block-start: true,\n        scroll-margin-bottom: true,\n        scroll-margin-inline: true,\n        scroll-margin-inline-end: true,\n        scroll-margin-inline-start: true,\n        scroll-margin-left: true,\n        scroll-margin-right: true,\n        scroll-margin-top: true,\n        scroll-padding: true,\n        scroll-padding-block: true,\n        scroll-padding-block-end: true,\n        scroll-padding-block-start: true,\n        scroll-padding-bottom: true,\n        scroll-padding-inline: true,\n        scroll-padding-inline-end: true,\n        scroll-padding-inline-start: true,\n        scroll-padding-left: true,\n        scroll-padding-right: true,\n        scroll-padding-top: true,\n        scroll-snap-align: true,\n        scroll-snap-stop: true,\n        scroll-snap-type: true,\n        scroll-timeline: true,\n        scroll-timeline-axis: true,\n        scroll-timeline-name: true,\n        width: true,\n    ),\n    // Associated properties with c-pos\n    pos: (\n        bottom: true,\n        left: true,\n        perspective: true,\n        perspective-origin: true,\n        position: true,\n        right: true,\n        top: true,\n        scale: true,\n        transform: true,\n        transform-box: true,\n        transform-origin: true,\n        transform-style: true,\n        translate: true,\n        z-index: true,\n    ),\n    // Associated properties with c-txt\n    txt: (\n        column-count: true,\n        column-fill: true,\n        column-gap: true,\n        column-rule: true,\n        column-rule-color: true,\n        column-rule-style: true,\n        column-rule-width: true,\n        column-span: true,\n        column-width: true,\n        columns: true,\n        direction: true,\n        font: true,\n        font-family: true,\n        font-feature-settings: true,\n        font-kerning: true,\n        font-language-override: true,\n        font-optical-sizing: true,\n        font-palette: true,\n        font-size: true,\n        font-size-adjust: true,\n        font-stretch: true,\n        font-style: true,\n        font-synthesis: true,\n        font-variant: true,\n        font-variant-alternates: true,\n        font-variant-caps: true,\n        font-variant-east-asian: true,\n        font-variant-emoji: true,\n        font-variant-ligatures: true,\n        font-variant-numeric: true,\n        font-variant-position: true,\n        font-variation-settings: true,\n        font-weight: true,\n        hyphenate-character: true,\n        hyphenate-limit-chars: true,\n        hyphens: true,\n        letter-spacing: true,\n        line-break: true,\n        line-height: true,\n        text-align: true,\n        text-align-last: true,\n        text-combine-upright: true,\n        text-decoration: true,\n        text-decoration-color: true,\n        text-decoration-line: true,\n        text-decoration-skip: true,\n        text-decoration-skip-ink: true,\n        text-decoration-style: true,\n        text-decoration-thickness: true,\n        text-emphasis: true,\n        text-emphasis-color: true,\n        text-emphasis-position: true,\n        text-emphasis-style: true,\n        text-indent: true,\n        text-justify: true,\n        text-orientation: true,\n        text-overflow: true,\n        text-rendering: true,\n        text-shadow: true,\n        text-size-adjust: true,\n        text-transform: true,\n        text-underline-offset: true,\n        text-underline-position: true,\n        vertical-align: true,\n        white-space: true,\n        word-break: true,\n        word-spacing: true,\n        writing-mode: true,\n        -moz-osx-font-smoothing: true,\n        -webkit-font-smoothing: true\n    ),\n    // Associated properties with c-skin\n    skin: (\n        animation: true,\n        animation-delay: true,\n        animation-direction: true,\n        animation-duration: true,\n        animation-fill-mode: true,\n        animation-iteration-count: true,\n        animation-name: true,\n        animation-play-state: true,\n        animation-timing-function: true,\n        appearance: true,\n        backface-visibility: true,\n        background: true,\n        background-attachment: true,\n        background-clip: true,\n        background-color: true,\n        background-image: true,\n        background-origin: true,\n        background-position: true,\n        background-repeat: true,\n        background-size: true,\n        border: true,\n        border-bottom: true,\n        border-bottom-color: true,\n        border-bottom-left-radius: true,\n        border-bottom-right-radius: true,\n        border-bottom-style: true,\n        border-bottom-width: true,\n        border-collapse: true,\n        border-color: true,\n        border-image: true,\n        border-image-outset: true,\n        border-image-repeat: true,\n        border-image-slice: true,\n        border-image-source: true,\n        border-image-width: true,\n        border-left: true,\n        border-left-color: true,\n        border-left-style: true,\n        border-left-width: true,\n        border-radius: true,\n        border-right: true,\n        border-right-color: true,\n        border-right-style: true,\n        border-right-width: true,\n        border-spacing: true,\n        border-style: true,\n        border-top: true,\n        border-top-color: true,\n        border-top-left-radius: true,\n        border-top-right-radius: true,\n        border-top-style: true,\n        border-top-width: true,\n        border-width: true,\n        box-shadow: true,\n        caption-side: true,\n        color: true,\n        counter-increment: true,\n        counter-reset: true,\n        cursor: true,\n        filter: true,\n        list-style: true,\n        list-style-image: true,\n        list-style-position: true,\n        list-style-type: true,\n        mask: true,\n        mask-border: true,\n        mask-border-mode: true,\n        mask-border-outset: true,\n        mask-border-repeat: true,\n        mask-border-slice: true,\n        mask-border-source: true,\n        mask-border-width: true,\n        mask-clip: true,\n        mask-composite: true,\n        mask-image: true,\n        mask-mode: true,\n        mask-origin: true,\n        mask-position: true,\n        mask-repeat: true,\n        mask-size: true,\n        mask-type: true,\n        mix-blend-mode: true,\n        offset: true,\n        offset-anchor: true,\n        offset-distance: true,\n        offset-path: true,\n        offset-position: true,\n        offset-rotate: true,\n        opacity: true,\n        outline: true,\n        outline-color: true,\n        outline-offset: true,\n        outline-style: true,\n        outline-width: true,\n        page-break-after: true,\n        page-break-before: true,\n        page-break-inside: true,\n        pointer-events: true,\n        print-color-adjust: true,\n        quotes: true,\n        resize: true,\n        scrollbar-color: true,\n        scrollbar-gutter: true,\n        scrollbar-width: true,\n        shape-image-threshold: true,\n        shape-margin: true,\n        shape-outside: true,\n        tab-size: true,\n        touch-action: true,\n        transition: true,\n        transition-delay: true,\n        transition-duration: true,\n        transition-property: true,\n        transition-timing-function: true,\n        user-select: true,\n        -webkit-appearance: true\n    )\n);\n",
		"/*\n    SQUARE ROOT\n    DESIGN SYSTEM FUNCTION\n    @return the quare root value of the specified number\n    @param $number - the number\n    Source https://www.antimath.info/css/sass-sqrt-function/\n*/\n@function briks-sqrt($number) {\n    $x0: 1;\n    $x1: $x0;\n    @for $i from 1 through 10 {\n        $x1: $x0 - ($x0 * $x0 - abs($number)) / (2 * $x0);\n        $x0: $x1;\n    }\n    @return $x1;\n}\n/*\n    FONT SIZE\n    DESIGN SYSTEM FUNCTION\n    @return the value of the specified font size name\n    @param $name - the name of the font size specified into config/font-sizes\n*/\n@function briks-font-size($name) {\n    @return map-get($briks-font-sizes, $name);\n}\n\n/*\n    SPACING\n    DESIGN SYSTEM FUNCTION\n    @return the value of the specified spacing name\n    @param $name - the name of the spacing specified into config/spacings\n*/\n@function briks-spacing($name) {\n    @return map-get($briks-spacings, $name);\n}\n\n/*\n    LUMINANCE CALCULATION\n    DESIGN SYSTEM FUNCTION\n    Calculate the luminance for a color.\n    @param $color - color - the color to analyze\n    @param $method - integer - the method to use\n*/\n@function briks-luminance($color, $method: $briks-luminance-method) {\n    $red: nth($linear-channel-values, red($color) + 1);\n    $green: nth($linear-channel-values, green($color) + 1);\n    $blue: nth($linear-channel-values, blue($color) + 1);\n    @if $method == 1 {\n        // Weighted Euclidean Distance in 3D RGB Space http://alienryderflex.com/hsp.html\n        @return briks-sqrt(.299 * $red * $red + .587 * $green * $green + .114 * $blue * $blue);\n    }\n    @else if $method == 2 {\n        // W3C recommandation https://www.w3.org/TR/AERT/#color-contrast\n        @return .299 * $red + .587 * $green + .117 * $blue;\n    }\n    @else if $method == 3 {\n        // Luma sRGB https://en.wikipedia.org/wiki/Rec._709\n        @return .2126 * $red + .7152 * $green + .0722 * $blue;\n    }\n}\n\n/*\n    SMART CONTRAST CALCULATION\n    DESIGN SYSTEM FUNCTION\n    Returns the specified contrasted or accentuated color\n    See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n    @param $step - integer from -100 to 100\n    @param $color - color value - the color value to process\n    How it works:\n    * $step = 0 returns the same color as input\n    * $step = -100 and value = 100 always return black or white colors\n    * $step = 100 returns WHITE if the input color luminance is below or equal 50%\n    * $step = 100 returns BLACK if the input color luminance is above 50%\n    * $step = -100 returns WHITE if the input color luminance is above 50%\n    * $step = -100 returns BLACK if the input color luminance is below or equal 50%\n*/\n@function briks-smart-contrast($step, $color) {\n    @if type-of($step) == number and type-of($color) == color {\n        $color_final: null;\n        $lightness: lightness($color);\n        $luminance: briks-luminance($color);\n        //Accentuated contrast mode\n        @if $step < 0 {\n             @if $luminance > $briks-luminance-threshold {\n                $new_amount: -($step/100) * (100 - briks-strip-units($lightness));\n                $color_final: lighten($color, $new_amount);\n            }\n            @else {\n                $new_amount: -($step/100) * briks-strip-units($lightness);\n                $color_final: darken($color, $new_amount);\n            }\n        }\n        //Smart contrast mode\n        @else {\n             @if $luminance > $briks-luminance-threshold {\n                $new_amount: ($step/100) * briks-strip-units($lightness);\n                $color_final: darken($color, $new_amount);\n            }\n            @else {\n                $new_amount: ($step/100) * (100 - briks-strip-units($lightness));\n                $color_final: lighten($color, $new_amount);\n            }\n        }\n        @return $color_final;\n    }\n    @else {\n        @warn 'briks-smart-contrast: $step is not an number or $color is not a valid css color value';\n        @warn 'You may call a color contrast that does not exist';\n        @return '';\n    }\n\n}\n\n@function briks-contrast-ratio($color1, $color2) {\n    // Check alpha == 1 to avoid bad results\n    @if alpha($color1) < 1 or alpha($color2) < 1  {\n        @return 0;\n    } @else {\n        $luminance1: briks-luminance($color1);\n        $luminance2: briks-luminance($color2);\n        $difference: $luminance1 - $luminance2;\n        @if $difference <= 0 {\n            @return ($luminance2 + 0.05) / ($luminance1 + 0.05);\n        }\n        @else {\n            @return ($luminance1 + 0.05) / ($luminance2 + 0.05);\n        }\n    }\n}\n\n/*\n    STRIP UNITS\n    DESIGN SYSTEM FUNCTION\n    Returns a value without its unit\n    @param $string - string - The value  with its unit to trim\n*/\n@function briks-strip-units($string) {\n    @return $string / ($string * 0 + 1);\n}\n\n/*\n    GENERIC UTILITY VALUE\n    DESIGN SYSTEM FUNCTION\n    @return the proper value of the specified utility\n    @param $property - the CSS property\n    @param $name - name of the pattern\n    @param $value - the value fallback if $name is not associated to any pattern\n*/\n@function briks-generic-utility($property, $name, $value) {\n    @if $property == 'font-family' {\n        @return my-font-family($name);\n    } @else if $property == 'border-radius' or $property == 'border-top-left-radius' or $property == 'border-top-right-radius' or $property == 'border-bottom-right-radius' or $property == 'border-bottom-left-radius' {\n        @return my-border-radius($name);\n    } @else if $property == 'border' or $property == 'border-top' or $property == 'border-right' or $property == 'border-bottom' or $property == 'border-left' {\n        @return my-border($name);\n    } @else if $property == 'color' or $property == 'background-color' {\n        @return my-color($name);\n    } @else if $property == 'background' {\n        @return my-background($name);\n    } @else if $property == 'box-shadow' {\n        @return my-shadow($name);\n    } @else if $property == 'font-size' {\n        @return my-font-size($name);\n    } @else if $property == 'font' {\n        @return my-typography($name);\n    } @else if $property == 'margin' or $property == 'margin-top' or $property == 'margin-right' or $property == 'margin-bottom' or $property == 'margin-left'\n            or $property == 'padding' or $property == 'padding-top' or $property == 'padding-right' or $property == 'padding-bottom' or $property == 'padding-left'\n            or $property == 'top' or $property == 'right' or $property == 'bottom' or $property == 'left' {\n        @return my-spacing($name);\n    } @else {\n        @return $value;\n    }\n}\n@function briks-scope($component_name, $property) {\n    $message: false;\n    @if type-of(map-get($briks-scope, $component_name)) == map {\n        @if type-of(map-get(map-get($briks-scope, $component_name), $property)) == 'null' {\n            @if type-of(map-get(map-get($briks-scope, briks_specific), $property)) == 'null' {\n                $message: $property + ' is not supported in c-' + $component_name + ' scope';\n            }\n        }\n    }\n    @return $message;\n}",
		"/*\n    COLOR\n    USAGE FUNCTION\n    Values ready to use for the end-user\n    @returns the specified color name value\n    @param $name - the name of the color specified into $briks-colors\n*/\n@function my-color($name) {\n    // If color, it is a known color\n    @if type-of(map-get($briks-colors, $name)) == color {\n        $cssvar: unquote('--')+$briks-css-variables-prefix+color-+$name;\n        $fallback1: map-get($briks-colors, $name);\n        @if type-of($fallback1) == string {\n            $fallback1: unquote($fallback1);\n        }\n        @if $briks-css-variables-enabled {\n            @return var($cssvar, $fallback1);\n        } @else {\n            @return $fallback1;\n            // @return unquote(map-get($briks-colors, $name));\n        }\n    }\n    // Otherwise it is a custom value\n    @else {\n        @warn 'UNKNOWN color name:'+$name;\n        @return $name;\n    }\n}\n\n/*\n    FONT SIZE\n    USAGE FUNCTION\n    Values ready to use for the end-user\n    @returns the specified font size name value with the design system unit\n    @param $name - the name of the font size specified into settings $briks-font-sizes\n*/\n@function my-font-size($name) {\n    // If number, it is a known font size\n    @if type-of(map-get($briks-font-sizes, $name)) == number {\n        $cssvar: unquote('--')+$briks-css-variables-prefix+font-size-+$name;\n        $fallback1: map-get($briks-font-sizes, $name)+$briks-unit;\n        @if type-of($fallback1) == string {\n            $fallback1: unquote($fallback1);\n        }\n        @if $briks-css-variables-enabled {\n            @return var($cssvar, $fallback1);\n        } @else {\n            @return $fallback1;\n            // @return unquote(map-get($briks-font-sizes, $name)+$briks-unit);\n        }\n    }\n    // Otherwise it is a custom value\n    @else {\n        @warn 'UNKNOWN font size name:'+$name;\n        @return $name;\n    }\n}\n/*\n    TYPOGRAPHY\n    USAGE FUNCTION\n    Values ready to use for the end-user\n    @returns - the specified CSS font shorthand\n    @param $name - the name of the typography specified into settings $briks-typography\n*/\n@function my-typography($name) {\n    @if type-of(map-get($briks-typography, $name)) == 'null' {\n        @warn 'UNKNOWN typography:'+$name;\n        @return $name;\n    } @else {\n        $cssvar: unquote('--')+$briks-css-variables-prefix+typo-+$name;\n        $fallback1: map-get($briks-typography, $name);\n        @if type-of($fallback1) == string {\n            $fallback1: unquote($fallback1);\n        }\n        @if $briks-css-variables-enabled {\n            @return var($cssvar, $fallback1);\n        } @else {\n            @return $fallback1;\n            // @return unquote(map-get($briks-typography, $name));\n        }\n    }\n}\n/*\n    BORDER\n    USAGE FUNCTION\n    Values ready to use for the end-user\n    @returns - the specified shorthand with the design system units\n    @param $name - the name of the border style specified into settings $briks-borders\n*/\n@function my-border($name) {\n    @if type-of(map-get($briks-borders, $name)) == 'null' {\n        @warn 'UNKNOWN border name:'+$name;\n        @return $name;\n    } @else {\n        $cssvar: unquote('--')+$briks-css-variables-prefix+border-+$name;\n        $fallback1: map-get($briks-borders, $name);\n        @if type-of($fallback1) == string {\n            $fallback1: unquote($fallback1);\n        }\n        @if $briks-css-variables-enabled {\n            @return var($cssvar, $fallback1);\n        } @else {\n            @return $fallback1;\n            // @return unquote(map-get($briks-borders, $name));\n        }\n    }\n}\n\n/*\n    SHADOW\n    USAGE FUNCTION\n    Values ready to use for the end-user\n    @returns - the specified shorthand with the design system units\n    @param $name - the name of the shadow style specified into settings $briks-shadows\n*/\n@function my-shadow($name) {\n    @if type-of(map-get($briks-shadows, $name)) == 'null' {\n        @warn 'UNKNOWN shadow name:'+$name;\n        @return $name;\n    } @else {\n        $cssvar: unquote('--')+$briks-css-variables-prefix+shadow-+$name;\n        $fallback1: map-get($briks-shadows, $name);\n        @if type-of($fallback1) == string {\n            $fallback1: unquote($fallback1);\n        }\n        @if $briks-css-variables-enabled {\n            @return var($cssvar, $fallback1);\n        } @else {\n            @return $fallback1;\n            // @return unquote(map-get($briks-shadows, $name));\n        }\n    }\n}\n\n/*\n    BORDER RADIUS\n    USAGE FUNCTION\n    Values ready to use for the end-user\n    @returns - the specified shorthand for border radius with the design system units\n    @param $glob-tlbr-tl   the name of the border radius specified into settings border-radius\n                                According to usage, it can be\n                                    -> global border radius,\n                                    -> top-left + top-right border radius\n                                    -> top-left border radius only\n    @param $trbl-tr          the name of the border radius specified into settings border-radius\n                                According to usage, it can be\n                                    -> top-right border radius\n                                    -> right border radius\n    @param $br         the name of the bottom right border radius specified into settings border-radius\n    @param $bl         the name of the bottom left border radius specified into settings border-radius\n    Examples:\n        my-border-radius(xs) returns 3px;\n        my-border-radius(xs, none) returns 3px 0px;\n        my-border-radius(xs, lg, sm, none) returns 3px 28px 9px 0px;\n*/\n@function my-border-radius($glob-tlbr-tl, $trbl-tr: '', $br: '', $bl: '') {\n    @if (type-of(map-get($briks-border-radius, $glob-tlbr-tl)) == 'null') {\n        @warn 'UNKNOWN BORDER RADIUS NAME:'+$glob-tlbr-tl;\n    }\n    @if (type-of(map-get($briks-border-radius, $trbl-tr)) == 'null') and ($trbl-tr != '') {\n        @warn 'UNKNOWN BORDER RADIUS NAME:'+$trbl-tr;\n    }\n    @if (type-of(map-get($briks-border-radius, $br)) == 'null') and ($br != '') {\n        @warn 'UNKNOWN BORDER RADIUS NAME:'+$br;\n    }\n    @if (type-of(map-get($briks-border-radius, $bl)) == 'null') and ($bl != '') {\n        @warn 'UNKNOWN BORDER RADIUS NAME:'+$bl;\n    }\n    @if (type-of(map-get($briks-border-radius, $glob-tlbr-tl)) != 'null') and (type-of(map-get($briks-border-radius, $trbl-tr)) != 'null') and (type-of(map-get($briks-border-radius, $br)) != 'null') and (type-of(map-get($briks-border-radius, $bl)) != 'null') {\n        $cssvar1: unquote('--')+$briks-css-variables-prefix+border-radius-+$glob-tlbr-tl;\n        $cssvar2: unquote('--')+$briks-css-variables-prefix+border-radius-+$trbl-tr;\n        $cssvar3: unquote('--')+$briks-css-variables-prefix+border-radius-+$br;\n        $cssvar4: unquote('--')+$briks-css-variables-prefix+border-radius-+$bl;\n        $fallback1: map-get($briks-border-radius, $glob-tlbr-tl)+$briks-unit;\n        @if type-of($fallback1) == string {\n            $fallback1: unquote($fallback1);\n        }\n        $fallback2: map-get($briks-border-radius, $trbl-tr)+$briks-unit;\n        @if type-of($fallback2) == string {\n            $fallback2: unquote($fallback2);\n        }\n        $fallback3: map-get($briks-border-radius, $br)+$briks-unit;\n        @if type-of($fallback3) == string {\n            $fallback3: unquote($fallback3);\n        }\n        $fallback4: map-get($briks-border-radius, $bl)+$briks-unit;\n        @if type-of($fallback4) == string {\n            $fallback4: unquote($fallback4);\n        }\n        @if $briks-css-variables-enabled {\n            @return var($cssvar1, $fallback1) var($cssvar2, $fallback2) var($cssvar3, $fallback3) var($cssvar4, $fallback4);\n        } @else {\n            @return $fallback1 $fallback2 $fallback3 $fallback4;\n            // @return unquote(map-get($briks-border-radius, $glob-tlbr-tl)+$briks-unit) unquote(map-get($briks-border-radius, $trbl-tr)+$briks-unit) unquote(map-get($briks-border-radius, $br)+$briks-unit) unquote(map-get($briks-border-radius, $bl)+$briks-unit);\n        }\n    } @else if (type-of(map-get($briks-border-radius, $trbl-tr)) != 'null') {\n        $cssvar1: unquote('--')+$briks-css-variables-prefix+border-radius-+$glob-tlbr-tl;\n        $cssvar2: unquote('--')+$briks-css-variables-prefix+border-radius-+$trbl-tr;\n        $fallback1: map-get($briks-border-radius, $glob-tlbr-tl)+$briks-unit;\n        @if type-of($fallback1) == string {\n            $fallback1: unquote($fallback1);\n        }\n        $fallback2: map-get($briks-border-radius, $trbl-tr)+$briks-unit;\n        @if type-of($fallback2) == string {\n            $fallback2: unquote($fallback2);\n        }\n        @if $briks-css-variables-enabled {\n            @return var($cssvar1, $fallback1) var($cssvar2, $fallback2);\n        } @else {\n            @return $fallback1 $fallback2;\n            // @return unquote(map-get($briks-border-radius, $glob-tlbr-tl)+$briks-unit) unquote(map-get($briks-border-radius, $trbl-tr)+$briks-unit);\n        }\n    } @else if type-of(map-get($briks-border-radius, $glob-tlbr-tl)) != 'null' {\n        $cssvar: unquote('--')+$briks-css-variables-prefix+border-radius-+$glob-tlbr-tl;\n        $fallback1: map-get($briks-border-radius, $glob-tlbr-tl)+$briks-unit;\n        @if type-of($fallback1) == string {\n            $fallback1: unquote($fallback1);\n        }\n        @if $briks-css-variables-enabled {\n            @return var($cssvar, $fallback1);\n        } @else {\n            @return $fallback1;\n            // @return unquote(map-get($briks-border-radius, $glob-tlbr-tl)+$briks-unit);\n        }\n    } @else {\n        @return '';\n    }\n}\n\n/*\n    SPACING\n    USAGE FUNCTION\n    Values ready to use for the end-user\n    @returns - the specified shorthand for spacement between elements with the design system units\n    @param $glob-tb-t   the name of the spacing specified into settings spacings\n                                According to usage, it can be\n                                    -> global for the element\n                                    -> top+bottom for the element\n                                    -> left  for the element\n    @param $lr-r        the name of the spacing specified into settings spacings\n                                According to usage, it can be\n                                    -> left+right for the element\n                                    -> right  for the element\n    @param $b           the name of the bottom spacing specified into settings spacings\n    @param $l           the name of the left spacing specified into settings spacings\n    Examples:\n        my-spacing(xs) returns 12px;\n        my-spacing(xs, none) returns 12px 0px;\n        my-spacing(xs, lg, sm, none) returns 12px 28px 14px 0px;\n*/\n@function my-spacing($glob-tb-t, $lr-r: '', $b: '', $l: '') {\n    @if (type-of(briks-spacing($glob-tb-t)) == 'null') {\n        @warn 'UNKNOWN SPACING NAME:'+$glob-tb-t;\n    }\n    @if (type-of(briks-spacing($lr-r)) == 'null') and ($lr-r != '') {\n        @warn 'UNKNOWN SPACING NAME:'+$lr-r;\n    }\n    @if (type-of(briks-spacing($b)) == 'null') and ($b != '') {\n        @warn 'UNKNOWN SPACING NAME:'+$b;\n    }\n    @if (type-of(briks-spacing($l)) == 'null') and ($l != '') {\n        @warn 'UNKNOWN SPACING NAME:'+$l;\n    }\n    @if (type-of(briks-spacing($glob-tb-t)) != 'null') and (type-of(briks-spacing($lr-r)) != 'null') and (type-of(briks-spacing($b)) != 'null') and (type-of(briks-spacing($l)) != 'null') {\n        $cssvar1: unquote('--')+$briks-css-variables-prefix+spacing-+$glob-tb-t;\n        $cssvar2: unquote('--')+$briks-css-variables-prefix+spacing-+$lr-r;\n        $cssvar3: unquote('--')+$briks-css-variables-prefix+spacing-+$b;\n        $cssvar4: unquote('--')+$briks-css-variables-prefix+spacing-+$l;\n        $fallback1: briks-spacing($glob-tb-t)+$briks-unit;\n        @if type-of($fallback1) == string {\n            $fallback1: unquote($fallback1);\n        }\n        $fallback2: briks-spacing($lr-r)+$briks-unit;\n        @if type-of($fallback2) == string {\n            $fallback2: unquote($fallback2);\n        }\n        $fallback3: briks-spacing($b)+$briks-unit;\n        @if type-of($fallback3) == string {\n            $fallback3: unquote($fallback3);\n        }\n        $fallback4: briks-spacing($l)+$briks-unit;\n        @if type-of($fallback4) == string {\n            $fallback4: unquote($fallback4);\n        }\n        @if $briks-css-variables-enabled {\n            @return var($cssvar1, $fallback1) var($cssvar2, $fallback2) var($cssvar3, $fallback3) var($cssvar4, $fallback4);\n        } @else {\n            @return $fallback1 $fallback2 $fallback3 $fallback4;\n            // @return unquote(briks-spacing($glob-tb-t)+$briks-unit) unquote(briks-spacing($lr-r)+$briks-unit) unquote(briks-spacing($b)+$briks-unit) unquote(briks-spacing($l)+$briks-unit);\n        }\n    } @else if (type-of(briks-spacing($lr-r)) != 'null') {\n        $cssvar1: unquote('--')+$briks-css-variables-prefix+spacing-+$glob-tb-t;\n        $cssvar2: unquote('--')+$briks-css-variables-prefix+spacing-+$lr-r;\n        $fallback1: briks-spacing($glob-tb-t)+$briks-unit;\n        @if type-of($fallback1) == string {\n            $fallback1: unquote($fallback1);\n        }\n        $fallback2: briks-spacing($lr-r)+$briks-unit;\n        @if type-of($fallback2) == string {\n            $fallback2: unquote($fallback2);\n        }\n        @if $briks-css-variables-enabled {\n            @return var($cssvar1, $fallback1) var($cssvar2, $fallback2);\n        } @else {\n            @return $fallback1 $fallback2;\n            // @return unquote(briks-spacing($glob-tb-t)+$briks-unit) unquote(briks-spacing($lr-r)+$briks-unit);\n        }\n    } @else if type-of(briks-spacing($glob-tb-t)) != 'null' {\n        $cssvar: unquote('--')+$briks-css-variables-prefix+spacing-+$glob-tb-t;\n        $fallback1: briks-spacing($glob-tb-t)+$briks-unit;\n        @if type-of($fallback1) == string {\n            $fallback1: unquote($fallback1);\n        }\n        @if $briks-css-variables-enabled {\n            @return var($cssvar, $fallback1);\n        } @else {\n            @return $fallback1;\n            // @return unquote(briks-spacing($glob-tb-t)+$briks-unit);\n        }\n    } @else {\n        @return '';\n    }\n}\n\n/*\n    FONT FAMILY\n    USAGE FUNCTION\n    Values ready to use for the end-user\n    @returns the specified font family name value\n    @param $name - the name of the font family specified into settings $briks-fonts\n*/\n@function my-font-family($name) {\n    @if type-of(map-get($briks-fonts, $name)) == 'null' {\n        @warn 'UNKNOWN font family:'+$name+' is not a valid font';\n        @return $name;\n    } @else {\n        @if type-of(map-get($briks-fonts, $name)) != 'null' {\n            $cssvar: unquote('--')+$briks-css-variables-prefix+font-family-+$name;\n            $fallback1: map-get(map-get($briks-fonts, $name), name);\n            @if type-of($fallback1) == string {\n                $fallback1: unquote($fallback1);\n            }\n            $fallback2: map-get(map-get($briks-fonts, $name), fallback);\n            @if type-of($fallback2) == string {\n                $fallback2: unquote($fallback2);\n            }\n            // @warn $cssvar;\n            // If local font\n            @if map-get(map-get($briks-fonts, $name), type) == 'local' {\n                @if $briks-css-variables-enabled {\n                    @return var($cssvar, $fallback1, $fallback2);\n                } @else {\n                    @return $fallback1, $fallback2;\n                }\n            }\n            // Websafe\n            @else if map-get(map-get($briks-fonts, $name), type) == 'websafe' {\n                @if $briks-css-variables-enabled {\n                    @return var($cssvar, unquote(map-get(map-get($briks-fonts, $name), name)));\n                } @else {\n                    @return unquote(map-get(map-get($briks-fonts, $name), name));\n                }\n            }\n            // If Google font\n            // The following code is needed to get proper Google font weight.\n            // To do so we add the 'font-weight' property with the proper font weight value\n            // @warn type-of(map-get($briks-fonts, $name));\n            @else if map-get(map-get($briks-fonts, $name), type) == 'google' {\n                $fallback1: map-get(map-get($briks-fonts, $name), name);\n                @if type-of($fallback1) == string {\n                    $fallback1: unquote($fallback1);\n                }\n                $fallback2: map-get(map-get($briks-fonts, $name), fallback);\n                @if type-of($fallback2) == string {\n                    $fallback2: unquote($fallback2);\n                }\n                @if $briks-css-variables-enabled {\n                    @return var($cssvar, $fallback1, $fallback2);\n                } @else {\n                    @return $fallback1, $fallback2;\n                }\n            }\n        }\n        @else {\n            @warn 'UNKNOWN font family:'+$name+' is not a valid font';\n            @return '';\n        }\n    }\n}\n\n/*\n    BACKGROUND\n    USAGE FUNCTION\n    Values ready to use for the end-user\n    @returns the specified background name value\n    @param $name - the name of the background specified into settings $briks-backgrounds\n*/\n@function my-background($name) {\n    // If not null, it is a known background\n    @if type-of(map-get($briks-backgrounds, $name)) != 'null' {\n        $cssvar: unquote('--')+$briks-css-variables-prefix+background-+$name;\n        $fallback1: map-get($briks-backgrounds, $name);\n        @if type-of($fallback1) == string {\n            $fallback1: unquote($fallback1);\n        }\n        @if $briks-css-variables-enabled {\n            @return var($cssvar, $fallback1);\n        } @else {\n            @return $fallback1;\n            // @return unquote(map-get($briks-font-sizes, $name)+$briks-unit);\n        }\n    }\n    // Otherwise it is a custom value\n    @else {\n        @warn 'UNKNOWN background name:'+$name;\n        @return '';\n    }\n}\n",
		"/*\n    MY SCREEN SIZE\n    Responsive tool, include a media query declaration\n    @param $list - list - List of screen sizes\n    @include my-screen-size(xs) {\n        h1 { color: red }\n    } -> Applies declarations on screen sizes called \"xs\"\n\n    @include my-screen-size(xs, sm, lg) {\n        h1 { color: red }\n    }\n    Applies declarations on screen sizes called \"xs\", \"sm\" and \"lg\"\n*/\n@mixin my-screen-size($list...){\n    @each $data in $list {\n        @if map-has-key($briks-screen-sizes, $data) == true {\n            $dataIndex: index(map-keys($briks-screen-sizes), $data);\n            $dataValue: map-get($briks-screen-sizes, $data);\n            $theNextIndex: $dataIndex + 1;\n            $theNextDataValue: map-get($briks-screens, $theNextIndex);\n            // First screen size\n            @if $dataIndex == 1 {\n                @media (max-width: $theNextDataValue - 1 + $briks-unit) { @content; }\n            } \n            // Last screen size\n            @else if $dataIndex == length($briks-screen-sizes) {\n                @media (min-width: map-get($briks-screens, $dataIndex) + $briks-unit) { @content; }\n            } \n            // Any other screen size\n            @else {\n                @media (min-width: $dataValue + $briks-unit) and (max-width: $theNextDataValue - 1 + $briks-unit) { @content; }\n            }\n        }\n    }\n}\n",
		"/*\n888888b.           d8b 888\n888  \"88b          Y8P 888\n888  .88P              888\n8888888K.  888d888 888 888  888 .d8888b\n888  \"Y88b 888P\"   888 888 .88P 88K\n888    888 888     888 888888K  \"Y8888b.\n888   d88P 888     888 888 \"88b      X88\n8888888P\"  888     888 888  888  88888P'\n*/\n/*\n    CSS VARIABLES\n    Enable or disable CSS variables of Briks into :root\n    --{{ $briks-css-variables-prefix }}-{{ patternType }}-{{ patternName }}\n*/\n$briks-css-variables-enabled:           true;\n$briks-css-variables-prefix:            'ita-';\n/*\n    UNIT\n    The default unit used into the entire design system\n*/\n$briks-unit:                            'px';\n/*\n    COMPONENTS PREFIX\n    The prefix which preceeds every component name\n*/\n$briks-components-prefix:               'c-';\n/*\n    MODIFIERS PREFIX\n    The prefix which preceeds every modifier name\n*/\n$briks-modifiers-prefix:                'm-';\n/*\n    UTILITIES PREFIX\n    The prefix which preceeds every utility name\n*/\n$briks-utilities-prefix:                'u-';\n/*\n    RESPONSIVE PREFIX\n    The prefix which preceeds every screen size name\n*/\n$briks-responsive-prefix:               '--';\n/*\n    LUMINANCE METHOD\n    Sets the method for automatic color contrast calculation. Involved in briks-smart-contrast function.\n    Default is 3, possible values:\n    1: Weighted Euclidean Distance in 3D RGB Space http://alienryderflex.com/hsp.html\n    2: W3C recommandation https://www.w3.org/TR/AERT/#color-contrast\n    3: Luma sRGB https://en.wikipedia.org/wiki/Rec._709\n*/\n$briks-luminance-method:                3;\n/*\n    LUMINANCE THRESHOLD\n    Define the luminance threshold between light and dark. Float value between 0 and 1.\n    Float value between 0 and 1\n*/\n$briks-luminance-threshold:             0.5;\n\n/*\n.d8888b.           888\nd88P  Y88b          888\n888    888          888\n888         .d88b.  888  .d88b.  888d888 .d8888b\n888        d88\"\"88b 888 d88\"\"88b 888P\"   88K\n888    888 888  888 888 888  888 888     \"Y8888b.\nY88b  d88P Y88..88P 888 Y88..88P 888          X88\n\"Y8888P\"   \"Y88P\"  888  \"Y88P\"  888      88888P'\n\n    COLORS\n    @type SASS map https://sass-lang.com/documentation/file.SASS_REFERENCE.html#maps\n    @format <COLOR_NAME>: <CSS_COLOR>\n*/\n$briks-colors: (\n    yellow-100: #FFEED8,\n    yellow-200: #FFDEA9,\n    yellow-300: #FFBF42,\n    yellow-400: #DCA123,\n    yellow-500: #BE8700,\n    yellow-600: #7D5800,\n    yellow-700: #5F4100,\n    yellow-800: #5F4100,\n    yellow-900: #271900,\n\n    orange-100: #FFEDE8,\n    orange-200: #FFDBD1,\n    orange-300: #FFB59F,\n    orange-400: #FF8B68,\n    orange-500: #FF6E41,\n    orange-600: #CF4B21,\n    orange-700: #862300,\n    orange-800: #5F1600,\n    orange-900: #3A0A00,\n\n    red-100: #FFEDEA,\n    red-200: #FFDAD4,\n    red-300: #FF8A76,\n    red-400: #FF553C,\n    red-500: #D72B15,\n    red-600: #BC1401,\n    red-700: #910C00,\n    red-800: #670600,\n    red-900: #400200,\n\n    lime-100: #F6FFF1,\n    lime-200: #C6FFC7,\n    lime-300: #97F8A1,\n    lime-400: #7BDB88,\n    lime-500: #5FBE6E,\n    lime-600: #006E2B,\n    lime-700: #00531E,\n    lime-800: #003913,\n    lime-900: #002108,\n\n    green-100: #DAFFE1,\n    green-200: #8CF9AC,\n    green-300: #70DC92,\n    green-400: #35A460,\n    green-500: #048848,\n    green-600: #006D38,\n    green-700: #005229,\n    green-800: #00391A,\n    green-900: #00210D,\n\n    blue-100: #E7FCFF,\n    blue-200: #D0F8FF,\n    blue-300: #96F0FF,\n    blue-400: #3CD9ED,\n    blue-500: #00C3D7,\n    blue-600: #008391,\n    blue-700: #004F57,\n    blue-800: #00363D,\n    blue-900: #001F24,\n\n    purple-100: #F3EEFF,\n    purple-200: #E3DFFF,\n    purple-300: #C4C0FF,\n    purple-400: #A7A1FC,\n    purple-500: #8782D7,\n    purple-600: #726DC3,\n    purple-700: #5C57A3,\n    purple-800: #2A2377,\n    purple-900: #130463,\n\n    grey-light-100: #FFFFFF,\n    grey-light-200: #F2F6F7,\n    grey-light-300: #E8ECEF,\n    grey-light-400: #DDE2E5,\n    grey-light-500: #D2D8DA,\n    grey-light-600: #C3C9CB,\n    grey-light-700: #AAAEB2,\n    grey-light-800: #959A9D,\n    grey-light-900: #84888B,\n\n    grey-dark-100: #8C9396,\n    grey-dark-200: #797E81,\n    grey-dark-300: #676767,\n    grey-dark-400: #535353,\n    grey-dark-500: #404040,\n    grey-dark-600: #3A3838,\n    grey-dark-700: #2B292C,\n    grey-dark-800: #202225,\n    grey-dark-900: #000000,\n);\n/*\n .d8888b.                                                           d8b\nd88P  Y88b                                                          Y8P\nY88b.\n \"Y888b.    .d8888b 888d888 .d88b.   .d88b.  88888b.       .d8888b  888 88888888  .d88b.  .d8888b\n    \"Y88b. d88P\"    888P\"  d8P  Y8b d8P  Y8b 888 \"88b      88K      888    d88P  d8P  Y8b 88K\n      \"888 888      888    88888888 88888888 888  888      \"Y8888b. 888   d88P   88888888 \"Y8888b.\nY88b  d88P Y88b.    888    Y8b.     Y8b.     888  888           X88 888  d88P    Y8b.          X88\n \"Y8888P\"   \"Y8888P 888     \"Y8888   \"Y8888  888  888       88888P' 888 88888888  \"Y8888   88888P'\n\n    @type SASS map https://sass-lang.com/documentation/file.SASS_REFERENCE.html#maps\n    @format <SCREEN_SIZE_NAME>: <NUMBER>\n\n    Sets the **break points** of your responsive design system.\n    Enter any amount of break point names and values to build your own screen sizes.\n    It is recommended to use semantic names, easy to remenber and to use,\n    they are used to name your CSS classes utilities.\n    `0` value defines the smallest screen size.\n\n    // Example\n    $briks-screen-sizes: (\n        mini: 0, // Use '0' to define the smallest screen size\n        medium: 500,\n        maxi: 800\n    );\n    SCREEN SIZES\n*/\n$briks-screen-sizes: (\n    xs: 0,\n    sm: 600,\n    md: 960,\n    lg: 1200\n);\n\n/*\n8888888888                888\n888                       888\n888                       888\n8888888  .d88b.  88888b.  888888 .d8888b\n888     d88\"\"88b 888 \"88b 888    88K\n888     888  888 888  888 888    \"Y8888b.\n888     Y88..88P 888  888 Y88b.       X88\n888      \"Y88P\"  888  888  \"Y888  88888P'\n\n    @type SASS map https://sass-lang.com/documentation/file.SASS_REFERENCE.html#maps\n    Fill the fonts assets informations for your design system. Supported font inclusions methods are:\n\n    ### Local or remote\n    // example\n    $briks-fonts: (\n        my-bold: ( // Your own font family name for the design system\n            type:        'local', // Sets the type\n            filename:    'montserrat-bold-webfont', // Name of the font file w/o extension\n            name:        'Montserrat Bold', // The display name used for compilation, can be any string\n            path:        '../fonts/', // Relative path to the file or remote URL\n            legacy:      false, // true means woff2 and woff, false means ttf+woff+svg\n            fallback:    'sans-serif', // Name of a websafe font family used as fallback\n            weight:      600, // Recommended but optional font weight\n        )\n    );\n\n    ### Google font\n    // example\n    $briks-fonts: (\n        my-light: ( // Your own font family name for the design system\n            type:        'google', // Sets the font type\n            name:        'Montserrat', // The Google font name\n            weight:      'Light', // Sets the weight of the font, leave empty '' for default weight\n            fallback:    'sans-serif' // Sets a web safe fallback font. Value can be any web safe font.\n        )\n    );\n\n    ### Websafe\n    // example\n    $briks-fonts: (\n        my-websafe: ( // Your own font family name for the design system\n            type:        'websafe', // Sets the font type\n            name:        'fantasy' // Sets the websafe font family name\n        )\n    );\n\n    ### May Help\n    https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#common_weight_name_mapping\n    100 \tThin (Hairline)\n    200 \tExtra Light (Ultra Light)\n    300 \tLight\n    400 \tNormal\n    500 \tMedium\n    600 \tSemi Bold (Demi Bold)\n    700 \tBold\n    800 \tExtra Bold (Ultra Bold)\n    900 \tBlack (Heavy)\n\n    FONTS\n*/\n$briks-fonts: (\n    lead-300: ( // Your own font family name for the design system\n        type:        'local', // Sets the type\n        filename:    'Lexend-Light', // Name of the font file w/o extension\n        name:        'Lexend Light', // The display name used for compilation, can be any string\n        path:        '../fonts/lexend/', // Relative path to the file or remote URL\n        legacy:      false, // true means woff2 and woff, false means ttf+woff+svg\n        fallback:    'sans-serif', // Name of a websafe font family used as fallback\n        weight:      300, // Recommended but optional font weight\n    ),\n    lead-400: ( // Your own font family name for the design system\n        type:        'local', // Sets the type\n        filename:    'Lexend-Regular', // Name of the font file w/o extension\n        name:        'Lexend Regular', // The display name used for compilation, can be any string\n        path:        '../fonts/lexend/', // Relative path to the file or remote URL\n        legacy:      false, // true means woff2 and woff, false means ttf+woff+svg\n        fallback:    'sans-serif', // Name of a websafe font family used as fallback\n        weight:      400, // Recommended but optional font weight\n    ),\n    lead-500: ( // Your own font family name for the design system\n        type:        'local', // Sets the type\n        filename:    'Lexend-Medium', // Name of the font file w/o extension\n        name:        'Lexend Medium', // The display name used for compilation, can be any string\n        path:        '../fonts/lexend/', // Relative path to the file or remote URL\n        legacy:      false, // true means woff2 and woff, false means ttf+woff+svg\n        fallback:    'sans-serif', // Name of a websafe font family used as fallback\n        weight:      500, // Recommended but optional font weight\n    ),\n    lead-600: ( // Your own font family name for the design system\n        type:        'local', // Sets the type\n        filename:    'Lexend-SemiBold', // Name of the font file w/o extension\n        name:        'Lexend SemiBold', // The display name used for compilation, can be any string\n        path:        '../fonts/lexend/', // Relative path to the file or remote URL\n        legacy:      false, // true means woff2 and woff, false means ttf+woff+svg\n        fallback:    'sans-serif', // Name of a websafe font family used as fallback\n        weight:      600, // Recommended but optional font weight\n    ),\n    lead-700: ( // Your own font family name for the design system\n        type:        'local', // Sets the type\n        filename:    'Lexend-Bold', // Name of the font file w/o extension\n        name:        'Lexend Bold', // The display name used for compilation, can be any string\n        path:        '../fonts/lexend/', // Relative path to the file or remote URL\n        legacy:      false, // true means woff2 and woff, false means ttf+woff+svg\n        fallback:    'sans-serif', // Name of a websafe font family used as fallback\n        weight:      700, // Recommended but optional font weight\n    )\n);\n/*\n    DO NOT EDIT BOOT\n*/\n@import 'briks/engine/boot';\n\n/*\n8888888888                888                  d8b\n888                       888                  Y8P\n888                       888\n8888888  .d88b.  88888b.  888888      .d8888b  888 88888888  .d88b.\n888     d88\"\"88b 888 \"88b 888         88K      888    d88P  d8P  Y8b\n888     888  888 888  888 888         \"Y8888b. 888   d88P   88888888\n888     Y88..88P 888  888 Y88b.            X88 888  d88P    Y8b.\n888      \"Y88P\"  888  888  \"Y888       88888P' 888 88888888  \"Y8888\n\n    @type SASS map https://sass-lang.com/documentation/file.SASS_REFERENCE.html#maps\n    @format <FONT_SIZE_NAME>: <NUMBER>\n\n    Enter all the font sizes that are used in the design system.\n\n    // example\n    $briks-font-sizes: (\n        xs: 12,\n        sm: 16,\n        md: 20,\n        xl: 40\n    );\n    FONT SIZES\n*/\n$briks-font-sizes: (\n    15: 64,\n    14: 56,\n    13: 48,\n    12: 44,\n    11: 38,\n    10: 32,\n    9: 28,\n    8: 26,\n    7: 24,\n    6: 20,\n    5: 18,\n    4: 16,\n    3: 14,\n    2: 12,\n    1: 10\n);\n$briks-typography: (); // DO NOT USE, DEPRECATED\n\n/*\n .d8888b.                             d8b\nd88P  Y88b                            Y8P\nY88b.\n \"Y888b.   88888b.   8888b.   .d8888b 888 88888b.   .d88b.  .d8888b\n    \"Y88b. 888 \"88b     \"88b d88P\"    888 888 \"88b d88P\"88b 88K\n      \"888 888  888 .d888888 888      888 888  888 888  888 \"Y8888b.\nY88b  d88P 888 d88P 888  888 Y88b.    888 888  888 Y88b 888      X88\n \"Y8888P\"  88888P\"  \"Y888888  \"Y8888P 888 888  888  \"Y88888  88888P'\n           888                                          888\n           888                                     Y8b d88P\n           888                                      \"Y88P\"\n\n    @type SASS map https://sass-lang.com/documentation/file.SASS_REFERENCE.html#maps\n    @format <SPACING_NAME>: <NUMBER>\n\n    Enter all the spacings that will be used into your project.\n    Spacings are used in margings, paddings, horizontal and vertical positionings like top, right, bottom, left.\n\n    // Example\n    $briks-spacings: (\n        xs: 8,\n        sm: 12,\n        md: 18,\n        lg: 26\n    );\n    SPACINGS\n*/\n$briks-spacings: (\n    11: 80,\n    10: 64,\n    9: 56,\n    8: 40,\n    7: 32,\n    6: 24,\n    5: 20,\n    4: 16,\n    3: 12,\n    2: 8,\n    1: 4,\n);\n\n/*\n888888b.                        888\n888  \"88b                       888\n888  .88P                       888\n8888888K.   .d88b.  888d888 .d88888  .d88b.  888d888 .d8888b\n888  \"Y88b d88\"\"88b 888P\"  d88\" 888 d8P  Y8b 888P\"   88K\n888    888 888  888 888    888  888 88888888 888     \"Y8888b.\n888   d88P Y88..88P 888    Y88b 888 Y8b.     888          X88\n8888888P\"   \"Y88P\"  888     \"Y88888  \"Y8888  888      88888P'\n\n    @type SASS map https://sass-lang.com/documentation/file.SASS_REFERENCE.html#maps\n    @format <BORDER_NAME>: <CSS_BORDER_SHORTHAND>\n\n    * Use function `my-color(yourColorName)` from $briks-colors to apply your own color.\n\n    // example\n    $briks-borders: (\n        light: 1px solid my-color(myColorName), // With my-color() function\n        dark: 2px dashed green // Custom color\n    );\n    BORDERS\n*/\n$briks-borders: (\n    // 15:     2px solid my-color(grey-dark-900),\n    // 15:     1px solid my-color(grey-dark-900),\n\n    // 15:     2px solid my-color(grey-dark-500),\n    // 15:     1px solid my-color(grey-dark-500),\n\n\n    // 9:      3px solid my-color(blue-600),\n    // 9:      2px solid my-color(blue-600),\n    // 9:      1px solid my-color(blue-600),\n\n    // 6:      2px solid my-color(grey-light-500),\n    // 5:      1px solid my-color(grey-light-500),\n    // 2:      2px solid my-color(grey-light-100),\n    // 1:      1px solid my-color(grey-light-100),\n    // 0:      none\n);\n\n\n/*\n888888b.                        888                                            888 d8b\n888  \"88b                       888                                            888 Y8P\n888  .88P                       888                                            888\n8888888K.   .d88b.  888d888 .d88888  .d88b.  888d888      888d888 8888b.   .d88888 888 888  888 .d8888b\n888  \"Y88b d88\"\"88b 888P\"  d88\" 888 d8P  Y8b 888P\"        888P\"      \"88b d88\" 888 888 888  888 88K\n888    888 888  888 888    888  888 88888888 888          888    .d888888 888  888 888 888  888 \"Y8888b.\n888   d88P Y88..88P 888    Y88b 888 Y8b.     888          888    888  888 Y88b 888 888 Y88b 888      X88\n8888888P\"   \"Y88P\"  888     \"Y88888  \"Y8888  888          888    \"Y888888  \"Y88888 888  \"Y88888  88888P'\n\n    @type SASS map https://sass-lang.com/documentation/file.SASS_REFERENCE.html#maps\n    @format <BORDER_RADIUS_NAME>: <NUMBER>\n\n    Enter your border radius for your design system.\n\n    // example\n    $briks-border-radius: (\n        min: 2,\n        max: 30\n    );\n    BORDER RADIUS\n*/\n$briks-border-radius: (\n    1: 4,\n    2: 8,\n    3: 12,\n    4: 16,\n    5: 20,\n    6: 24,\n    7: 32,\n    8: 40,\n    9: 56,\n    10:64,\n);\n/*\n.d8888b.  888                    888\nd88P  Y88b 888                    888\nY88b.      888                    888\n \"Y888b.   88888b.   8888b.   .d88888  .d88b.  888  888  888 .d8888b\n    \"Y88b. 888 \"88b     \"88b d88\" 888 d88\"\"88b 888  888  888 88K\n      \"888 888  888 .d888888 888  888 888  888 888  888  888 \"Y8888b.\nY88b  d88P 888  888 888  888 Y88b 888 Y88..88P Y88b 888 d88P      X88\n \"Y8888P\"  888  888 \"Y888888  \"Y88888  \"Y88P\"   \"Y8888888P\"   88888P'\n\n    @type SASS map https://sass-lang.com/documentation/file.SASS_REFERENCE.html#maps\n    @format <BOX_SHADOW_NAME>: <CSS_BOX_SHADOW>\n\n    Enter your [box shadows](https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow) for your design system.\n\n    * Use function `my-color(yourColorName)` from [$briks-colors](#Colors) to apply your own color.\n\n    // example\n    $briks-shadows: (\n        light: 0px 0px 10px 0px my-color(yourColorName), // With my-color() function\n        strong: 0px 2px 12px 0px rgba(black, 0.6) // Custom color\n    );\n    SHADOWS\n*/\n$briks-shadows: (\n    1: 0px 4px 16px 0px my-color(grey-light-300),\n    2: 0px 8px 24px 0px my-color(grey-light-300),\n    3: 0px 12px 32px 0px my-color(grey-light-300),\n    4: 0px 4px 16px 0px my-color(grey-light-400),\n    5: 0px 8px 24px 0px my-color(grey-light-400),\n    6: 0px 12px 32px 0px my-color(grey-light-400)\n);\n$briks-backgrounds: (); // DEPRECATED\n$briks-keyframes: ();\n$briks-utilities: ();\n$briks-components-generic: ();",
		"// SCREEN SIZES\n@each $screen-size, $value in $briks-screen-sizes {\n    $index: index(map-keys($briks-screen-sizes), $screen-size);\n    $newmap: (\n        $index: $value\n    );\n    $briks-screens: map-merge($briks-screens, $newmap);\n}\n\n",
		"/*\n    C-SKIN EXTENSION\n    Extension du composant générique c-skin\n    https://github.com/ita-design-system/c-skin.scss\n    Ce fichier doit servir à étendre ou surcharger les fonctionnalités\n    du composant c-dim selon les besoins du projet\n*/\n$briks-components-generic: (\n    // Nom du composant, obligatoirement skin\n    skin: ( \n        // Extension activée true ou false\n        enabled: true, \n        // Responsive activée true ou false pour l'extension\n        responsive: false, \n        // Valeurs par défaut de l'extension\n        defaults: (\n            pseudo-classes: (\n                // c-skin:disabled\n                disabled: (\n                    pointer-events: none,\n                    color: grey,\n                    background-color: lightgrey\n                )\n            )\n        ),\n        // Liste des modifieurs contenant chacun une liste de propriétés qui \n        // soit surchargent les propriétés par défaut\n        // soit ajoutent des propriétés\n        // soit les deux\n        modifiers: ( \n            bimage-1: (\n                border-image: url('../medias/border-1.svg') 13 / 10px\n            ),\n            // BORDER WIDTHS\n            bwidth-4: (\n                border-width: 4px\n            ),\n            bwidth-5: (\n                border-width: 5px\n            ),\n            bwidth-6: (\n                border-width: 6px\n            ),\n\n            // BORDER COLORS\n            // c-skin m-bcolor-blue-500\n            bcolor-blue-500: (\n                border-color: my-color(blue-500)\n            ),\n            // c-skin m-btcolor-blue-500\n            btcolor-blue-500: (\n                border-top-color: my-color(blue-500)\n            ),\n            // c-skin m-brcolor-blue-500\n            brcolor-blue-500: (\n                border-right-color: my-color(blue-500)\n            ),\n            // c-skin m-bbcolor-blue-500\n            bbcolor-blue-500: (\n                border-bottom-color: my-color(blue-500)\n            ),\n            // c-skin m-blcolor-blue-500\n            blcolor-blue-500: (\n                border-left-color: my-color(blue-500)\n            ),\n\n            // c-skin m-bcolor-blue-600\n            bcolor-blue-600: (\n                border-color: my-color(blue-600)\n            ),\n            // c-skin m-btcolor-blue-600\n            btcolor-blue-600: (\n                border-top-color: my-color(blue-600)\n            ),\n            // c-skin m-brcolor-blue-600\n            brcolor-blue-600: (\n                border-right-color: my-color(blue-600)\n            ),\n            // c-skin m-bbcolor-blue-600\n            bbcolor-blue-600: (\n                border-bottom-color: my-color(blue-600)\n            ),\n            // c-skin m-blcolor-blue-600\n            blcolor-blue-600: (\n                border-left-color: my-color(blue-600)\n            ),\n\n            // c-skin m-bcolor-orange-500\n            bcolor-orange-500: (\n                border-color: my-color(orange-500)\n            ),\n            // c-skin m-btcolor-orange-500\n            btcolor-orange-500: (\n                border-top-color: my-color(orange-500)\n            ),\n            // c-skin m-brcolor-orange-500\n            brcolor-orange-500: (\n                border-right-color: my-color(orange-500)\n            ),\n            // c-skin m-bbcolor-orange-500\n            bbcolor-orange-500: (\n                border-bottom-color: my-color(orange-500)\n            ),\n            // c-skin m-blcolor-orange-500\n            blcolor-orange-500: (\n                border-left-color: my-color(orange-500)\n            ),\n\n            // c-skin m-bcolor-lime-500\n            bcolor-lime-500: (\n                border-color: my-color(lime-500)\n            ),\n            // c-skin m-btcolor-lime-500\n            btcolor-lime-500: (\n                border-top-color: my-color(lime-500)\n            ),\n            // c-skin m-brcolor-lime-500\n            brcolor-lime-500: (\n                border-right-color: my-color(lime-500)\n            ),\n            // c-skin m-bbcolor-lime-500\n            bbcolor-lime-500: (\n                border-bottom-color: my-color(lime-500)\n            ),\n            // c-skin m-blcolor-lime-500\n            blcolor-lime-500: (\n                border-left-color: my-color(lime-500)\n            ),\n\n            // c-skin m-bcolor-purple-500\n            bcolor-purple-500: (\n                border-color: my-color(purple-500)\n            ),\n            // c-skin m-btcolor-purple-500\n            btcolor-purple-500: (\n                border-top-color: my-color(purple-500)\n            ),\n            // c-skin m-brcolor-purple-500\n            brcolor-purple-500: (\n                border-right-color: my-color(purple-500)\n            ),\n            // c-skin m-bbcolor-purple-500\n            bbcolor-purple-500: (\n                border-bottom-color: my-color(purple-500)\n            ),\n            // c-skin m-blcolor-purple-500\n            blcolor-purple-500: (\n                border-left-color: my-color(purple-500)\n            ),\n\n            // c-skin m-bcolor-grey-light-100\n            bcolor-grey-light-100: (\n                border-color: my-color(grey-light-100)\n            ),\n            // c-skin m-btcolor-grey-light-100\n            btcolor-grey-light-100: (\n                border-top-color: my-color(grey-light-100)\n            ),\n            // c-skin m-brcolor-grey-light-100\n            brcolor-grey-light-100: (\n                border-right-color: my-color(grey-light-100)\n            ),\n            // c-skin m-bbcolor-grey-light-100\n            bbcolor-grey-light-100: (\n                border-bottom-color: my-color(grey-light-100)\n            ),\n            // c-skin m-blcolor-grey-light-100\n            blcolor-grey-light-100: (\n                border-left-color: my-color(grey-light-100)\n            ),\n\n            // c-skin m-bcolor-grey-light-500\n            bcolor-grey-light-500: (\n                border-color: my-color(grey-light-500)\n            ),\n            // c-skin m-btcolor-grey-light-500\n            btcolor-grey-light-500: (\n                border-top-color: my-color(grey-light-500)\n            ),\n            // c-skin m-brcolor-grey-light-500\n            brcolor-grey-light-500: (\n                border-right-color: my-color(grey-light-500)\n            ),\n            // c-skin m-bbcolor-grey-light-500\n            bbcolor-grey-light-500: (\n                border-bottom-color: my-color(grey-light-500)\n            ),\n            // c-skin m-blcolor-grey-light-500\n            blcolor-grey-light-500: (\n                border-left-color: my-color(grey-light-500)\n            ),\n\n            // c-skin m-bcolor-grey-light-800\n            bcolor-grey-light-800: (\n                border-color: my-color(grey-light-800)\n            ),\n            // c-skin m-btcolor-grey-light-800\n            btcolor-grey-light-800: (\n                border-top-color: my-color(grey-light-800)\n            ),\n            // c-skin m-brcolor-grey-light-800\n            brcolor-grey-light-800: (\n                border-right-color: my-color(grey-light-800)\n            ),\n            // c-skin m-bbcolor-grey-light-800\n            bbcolor-grey-light-800: (\n                border-bottom-color: my-color(grey-light-800)\n            ),\n            // c-skin m-blcolor-grey-light-800\n            blcolor-grey-light-800: (\n                border-left-color: my-color(grey-light-800)\n            ),\n\n            // c-skin m-bcolor-grey-dark-500\n            bcolor-grey-dark-500: (\n                border-color: my-color(grey-dark-500)\n            ),\n            // c-skin m-btcolor-grey-dark-500\n            btcolor-grey-dark-500: (\n                border-top-color: my-color(grey-dark-500)\n            ),\n            // c-skin m-brcolor-grey-dark-500\n            brcolor-grey-dark-500: (\n                border-right-color: my-color(grey-dark-500)\n            ),\n            // c-skin m-bbcolor-grey-dark-500\n            bbcolor-grey-dark-500: (\n                border-bottom-color: my-color(grey-dark-500)\n            ),\n            // c-skin m-blcolor-grey-dark-500\n            blcolor-grey-dark-500: (\n                border-left-color: my-color(grey-dark-500)\n            ),\n\n            // c-skin m-bcolor-grey-dark-900\n            bcolor-grey-dark-900: (\n                border-color: my-color(grey-dark-900)\n            ),\n            // c-skin m-btcolor-grey-dark-900\n            btcolor-grey-dark-900: (\n                border-top-color: my-color(grey-dark-900)\n            ),\n            // c-skin m-brcolor-grey-dark-900\n            brcolor-grey-dark-900: (\n                border-right-color: my-color(grey-dark-900)\n            ),\n            // c-skin m-bbcolor-grey-dark-900\n            bbcolor-grey-dark-900: (\n                border-bottom-color: my-color(grey-dark-900)\n            ),\n            // c-skin m-blcolor-grey-dark-900\n            blcolor-grey-dark-900: (\n                border-left-color: my-color(grey-dark-900)\n            ),\n            // c-skin m-bg-1\n            bg-1: (\n                background: 50% 95% / contain no-repeat my-color(grey-light-100) url(../medias/menu.svg)\n            ),\n            // c-skin m-bg-2\n            bg-2: (\n                background: (url(../medias/vision.svg) no-repeat left my-spacing(10) top 27%,\n                linear-gradient(to bottom, my-color(purple-500) 53%, white 53.1%))\n            ),\n            // c-skin m-bg-3\n            bg-3: (\n                background: (url(../medias/vision.svg) no-repeat left my-spacing(5) top 53%,\n                linear-gradient(to bottom, my-color(purple-500) 68%, white 68.1%))\n            ),\n            // c-skin m-bg-4\n            bg-4: (\n                background: left my-spacing(3) top 50% / my-font-size(6) no-repeat url(../medias/search_line.svg)\n            ),\n            // c-skin m-bg-5\n            bg-5: (\n                background: url(../medias/ucar-store.svg) center bottom no-repeat\n            ),\n            // c-skin m-bg-6\n            bg-6: (\n                background: (url(../medias/mobilite.svg) no-repeat left my-spacing(10) top 15%,\n                linear-gradient(to bottom, my-color(orange-500) 53%, white 53.1%))\n            ),\n            // c-skin m-bg-7\n            bg-7: (\n                background: (url(../medias/mobilite.svg) no-repeat left my-spacing(5) top 37%,\n                linear-gradient(to bottom, my-color(orange-500) 65%, white 65.1%))\n            ),\n            // c-skin m-bg-8\n            bg-8: (\n                background: url(../medias/landscape.svg) center bottom no-repeat\n            ),\n            // c-skin m-bg-9\n            bg-9: (\n                background: (url(../medias/groupe.svg) no-repeat left my-spacing(10) top 35%,\n                linear-gradient(to bottom, my-color(purple-500) 53%, white 53.1%))\n            ),\n            // c-skin m-bg-10\n            bg-10: (\n                background: (url(../medias/groupe.svg) no-repeat left my-spacing(5) top 52%,\n                linear-gradient(to bottom, my-color(purple-500) 65%, white 65.1%))\n            ),\n            // c-skin m-bg-11\n            bg-11: (\n                background: url(../medias/groupe_illustration.svg) center bottom no-repeat\n            ),\n            // c-skin m-bg-12\n            bg-12: (\n                background: top 0% right 0% / auto 200px no-repeat url('../medias/ucar-en-chiffres-1_2.svg')\n            ),\n            // c-skin m-bg-13\n            bg-13: (\n                background: bottom 0% center / auto 390px no-repeat url('../medias/ucar-en-chiffres-2_2.svg')\n            ),\n            // c-skin m-bg-14\n            bg-14: (\n                background: top 50% left 0% / auto 80% no-repeat url('../medias/ucar-generic.svg')\n            ),\n            // c-skin m-bg-15\n            bg-15: (\n                background: left 0% center/auto 314px no-repeat url(\"../medias/ucar-concept.svg\")\n            ),\n            // c-skin m-bg-16\n            bg-16: (\n                background: repeat-x url('../medias/banner.svg')\n            ),\n            // c-skin m-bg-17\n            bg-17: (\n                background: top 24px left 24px no-repeat url('../medias/garage.svg')\n            ),\n            // c-skin m-bg-18\n            bg-18: (\n                background: url('../medias/franchise.svg') no-repeat center / contain\n            ),\n            // c-skin m-bg-19\n            bg-19: (\n                background: top 50% left 0% / auto 85% no-repeat url('../medias/reussite.svg')\n            ),\n            // c-skin m-bg-20\n            bg-20: (\n                background: linear-gradient(to bottom, transparent 20%, my-color(blue-500) 20.1%)\n            ),\n            // c-skin m-bg-21\n            bg-21: (\n                background: linear-gradient(to bottom, transparent 14%, my-color(blue-500) 14.1%)\n            ),\n            // c-skin m-bg-22\n            bg-22: (\n                background: url(../../ui/medias/info.svg) no-repeat\n            ),\n            // c-skin m-bg-23\n            bg-23: (\n                background: url(../../ui/medias/join.svg) no-repeat\n            ),\n            // c-skin m-bg-24\n            bg-24: (\n                background: top 22% right url(../../ui/medias/investment.svg) no-repeat\n            ),\n            // c-skin m-bg-24\n            bg-25: (\n                background: top 32% left 0% url(../../ui/medias/contact.svg) no-repeat\n            ),\n            // c-skin m-bg-24\n            bg-26: (\n                background-color: rgba(64,64,64, 0.8)\n            ),\n            // c-skin m-bg-27\n            bg-27: (\n                background: top 22% right 152% url(../../ui/medias/investment.svg) no-repeat\n            ),\n            // c-skin m-bg-28\n            bg-28: (\n                background: top 38% right 74% url(../../ui/medias/investment.svg) no-repeat\n            ),\n            // c-skin m-bg-29\n            bg-29: (\n                background: top 90% right url(../../ui/medias/mep_hp.svg) no-repeat\n            ),\n            // c-skin m-bg-30\n            bg-30: (\n                background: url(../../ui/medias/congratulations-car.png) left center no-repeat\n            ),\n            // c-skin m-bg-31\n            bg-31: (\n                background: top 38% right 100%  url('../../ui/medias/congratulations-ucar.png') no-repeat\n            ),\n            // c-skin m-bg-32\n            bg-32: (\n                background: url(../../ui/medias/mep_car.png) top 10% left 50% no-repeat,\n                background-size: contain\n            ),\n            // c-skin m-bg-33\n            bg-33: (\n                background: url(../../ui/medias/car_availability.svg) top 10% left 50% no-repeat,\n                background-size: contain\n            ),\n            // c-skin m-bg-34\n            bg-34: (\n                background: url(../../ui/medias/guy.svg) top 10% left 50% no-repeat,\n                background-size: contain\n            ),\n            // c-skin m-anim-1\n            anim-1: (\n                animation: banner 20s linear forwards infinite\n            ),\n            // c-skin m-color-scheme-1\n            color-scheme-1: (\n                background-color: my-color(blue-600),\n                color: my-color(grey-light-100),\n                pseudo-classes: (\n                    hover: (\n                        background-color: my-color(blue-700)\n                    ),\n                    focus: (\n                        outline: none,\n                        box-shadow: (0 0 0 2px my-color(grey-light-100), 0 0 0 4px my-color(blue-600))\n                    ),\n                    active: (\n                        outline: none,\n                        background-color: my-color(blue-800)\n                    ),\n                )\n            ),\n            // c-skin m-color-scheme-2\n            color-scheme-2: (\n                background-color: my-color(grey-dark-900),\n                color: my-color(grey-light-100),\n                border-color: my-color(grey-dark-900),\n                pseudo-classes: (\n                    hover: (\n                        background-color: my-color(grey-dark-700)\n                    ),\n                    focus: (\n                        outline: none,\n                        box-shadow: (0 0 0 2px my-color(grey-light-100), 0 0 0 4px my-color(grey-dark-700))\n                    ),\n                    active: (\n                        outline: none,\n                        background-color: my-color(grey-dark-700)\n                    ),\n                )\n            ),\n            // c-skin m-color-scheme-3\n            color-scheme-3: (\n                color: my-color(blue-600),\n                pseudo-classes: (\n                    hover: (\n                        color: my-color(blue-600),\n                    ),\n                    active: (\n                        color: my-color(blue-700)\n                    ),\n                    visited: (\n                        color: my-color(purple-700)\n                    )\n                )\n            ),\n            // c-skin m-color-scheme-4\n            color-scheme-4: (\n                background-color: my-color(grey-light-100),\n                color: my-color(grey-dark-900),\n                border-color: my-color(grey-light-100),\n                pseudo-classes: (\n                    hover: (\n                        background-color: my-color(grey-light-300)\n                    ),\n                    focus: (\n                        outline: none,\n                        box-shadow: (0 0 0 2px my-color(grey-dark-900), 0 0 0 4px my-color(grey-light-100))\n                    ),\n                    active: (\n                        outline: none,\n                        background-color: my-color(grey-light-300)\n                    )\n                )\n            ),\n            // c-skin m-color-scheme-5\n            color-scheme-5: (\n                color: my-color(grey-dark-900),\n                background-color: my-color(grey-light-100),\n                border: 1px solid my-color(grey-dark-900),\n                pseudo-classes: (\n                    disabled: (\n                        color: my-color(grey-light-500),\n                        border-color: my-color(grey-light-500),\n                    ),\n                    hover: (\n                        background-color: my-color(grey-light-500)\n                    ),\n                    focus: (\n                        outline: none,\n                        color: my-color(grey-light-100),\n                        background-color: my-color(grey-dark-900),\n                        box-shadow: (0 0 0 2px my-color(grey-light-100), 0 0 0 4px my-color(grey-dark-900))\n                    ),\n                    active: (\n                        color: my-color(grey-light-100),\n                        background-color: my-color(grey-dark-900),\n                    )\n                )\n            ),\n            // c-skin m-color-scheme-6 (facebook)\n            color-scheme-6: (\n                color: my-color(grey-light-700),\n                pseudo-classes: (\n                    hover: (\n                        color: #3578EA\n                    )\n                )\n            ),\n            // c-skin m-color-scheme-7 (Instagram)\n            color-scheme-7: (\n                color: my-color(grey-light-700),\n                pseudo-classes: (\n                    hover: (\n                        color: #FF6AAC\n                    )\n                )\n            ),\n            // c-skin m-color-scheme-8 (Youtube)\n            color-scheme-8: (\n                color: my-color(grey-light-700),\n                pseudo-classes: (\n                    hover: (\n                        color: #EB3F25\n                    )\n                )\n            ),\n            // c-skin m-color-scheme-9 (LinkedIn)\n            color-scheme-9: (\n                color: my-color(grey-light-700),\n                pseudo-classes: (\n                    hover: (\n                        color: #67B8FF\n                    )\n                )\n            ),\n            // c-skin m-color-scheme-10\n            color-scheme-10: (\n                border-color: my-color(grey-light-800),\n                background-color: my-color(grey-light-100),\n                pseudo-classes: (\n                    hover: (\n                        border-color: my-color(grey-dark-900)\n                    ),\n                    focus: (\n                        outline: none,\n                        box-shadow: (0 0 0 2px my-color(grey-light-100), 0 0 0 4px my-color(blue-600))\n                    ),\n                    required: (\n                        selector: '+label',\n                        pseudo-elements: (\n                            after: (\n                                content: \" *\",\n                                color: red\n                            )\n                        )\n                    ),\n                    disabled: (\n                        color: my-color(grey-light-500),\n                        border-color: my-color(grey-light-500),\n                        background-color: my-color(grey-light-100)\n                    )\n                )\n            ),\n            // c-skin m-color-scheme-10-ext-1\n            color-scheme-10-ext-1: (\n                pseudo-classes: (\n                    disabled: (\n                        selector: '+label',\n                        color: my-color(grey-light-500)\n                    )\n                )\n            ),\n            // c-skin m-color-scheme-10-ext-2\n            color-scheme-10-ext-2: (\n                pseudo-classes: (\n                    disabled: (\n                        selector: '+label+*',\n                        color: my-color(grey-light-500)\n                    )\n                )\n            ),\n            // c-skin m-color-scheme-11background-color: my-color(grey-light-100)\n            color-scheme-11: (\n                background-color: my-color(orange-500),\n                color: my-color(grey-dark-900),\n                pseudo-classes: (\n                    hover: (\n                        background-color: my-color(orange-600)\n                    ),\n                    focus: (\n                        outline: none,\n                        box-shadow: (0 0 0 2px my-color(grey-light-100), 0 0 0 4px my-color(orange-600))\n                    )\n                )\n            ),\n            // c-skin m-color-scheme-12\n            color-scheme-12: (\n                background-color: my-color(grey-light-100),\n                color: my-color(grey-dark-500),\n                border-color: my-color(grey-light-100),\n                pseudo-classes: (\n                    hover: (\n                        background-color: my-color(grey-light-300)\n                    ),\n                    focus: (\n                        outline: none,\n                        box-shadow: (0 0 0 2px my-color(grey-dark-900), 0 0 0 4px my-color(grey-light-100))\n                    ),\n                    active: (\n                        outline: none,\n                        background-color: my-color(grey-light-300)\n                    )\n                )\n            ),\n            // c-skin m-color-scheme-13\n            color-scheme-13: (\n                background-color: my-color(grey-light-100),\n                color: my-color(purple-500),\n                border-color: my-color(grey-light-100),\n                pseudo-classes: (\n                    hover: (\n                        background-color: my-color(grey-light-300)\n                    ),\n                    focus: (\n                        outline: none,\n                        box-shadow: (0 0 0 2px my-color(grey-dark-900), 0 0 0 4px my-color(grey-light-100))\n                    ),\n                    active: (\n                        outline: none,\n                        background-color: my-color(grey-light-300)\n                    )\n                )\n            ),\n            // c-skin m-color-scheme-14\n            color-scheme-14: (\n                background-color: my-color(grey-light-100),\n                pseudo-classes: (\n                    hover: (\n                        border-color: my-color(grey-dark-900)\n                    ),\n                    focus: (\n                        outline: none,\n                        box-shadow: (0 0 0 2px my-color(grey-light-100), 0 0 0 4px my-color(orange-600))\n                    ),\n                    disabled: (\n                        color: my-color(grey-light-500),\n                        border-color: my-color(grey-light-500),\n                        background-color: my-color(grey-light-100)\n                    )\n                )\n            ),\n            // c-skin m-color-scheme-15\n            color-scheme-15: (\n                color: my-color(orange-500),\n                background-color: my-color(grey-light-100),\n                border: 1px solid my-color(grey-dark-100),\n                pseudo-classes: (\n                    disabled: (\n                        color: my-color(grey-light-500),\n                        border-color: my-color(grey-light-500),\n                    ),\n                    hover: (\n                        background-color: my-color(grey-light-500)\n                    ),\n                    focus: (\n                        outline: none,\n                        color: my-color(grey-light-100),\n                        background-color: my-color(orange-500),\n                        box-shadow: (0 0 0 2px my-color(grey-light-100), 0 0 0 4px my-color(orange-500))\n                    ),\n                    active: (\n                        color: my-color(grey-light-100),\n                        background-color: my-color(orange-500),\n                    )\n                )\n            ),\n            // c-skin m-color-scheme-16\n            color-scheme-16: (\n                background-color: my-color(grey-light-100),\n                color: my-color(grey-dark-500),\n                border-color: my-color(purple-500),\n                pseudo-classes: (\n                    hover: (\n                        background-color: my-color(purple-100),\n                        color: my-color(purple-700),\n                    ),\n                    focus: (\n                        outline: none,\n                        box-shadow: (0 0 0 2px my-color(grey-dark-900), 0 0 0 4px my-color(grey-light-100))\n                    ),\n                    active: (\n                        outline: none,\n                        background-color: my-color(purple-300),\n                        color: my-color(purple-700),\n                    )\n                )\n            ),\n            // c-skin m-color-scheme-17\n            color-scheme-17: (\n                background-color: my-color(grey-light-100),\n                color: my-color(grey-dark-900),\n                border-color: my-color(grey-light-100),\n                pseudo-classes: (\n                    hover: (\n                        background-color: my-color(grey-light-300)\n                    ),\n                    focus: (\n                        outline: none,\n                        box-shadow: (0 0 0 2px my-color(grey-dark-900), 0 0 0 4px my-color(grey-light-100))\n                    ),\n                    active: (\n                        outline: none,\n                        background-color: my-color(grey-light-300)\n                    )\n                )\n            ),\n            // c-skin m-color-scheme-18\n            color-scheme-18: (\n                background-color: my-color(purple-500),\n                color: my-color(grey-dark-900),\n                border: solid 2px,\n                border-color: my-color(grey-dark-900),\n                pseudo-classes: (\n                    hover: (\n                        background-color: my-color(grey-light-300)\n                    ),\n                    focus: (\n                        outline: none,\n                        box-shadow: (0 0 0 2px my-color(grey-dark-900), 0 0 0 4px my-color(grey-light-100))\n                    ),\n                    active: (\n                        outline: none,\n                        background-color: my-color(grey-light-300)\n                    )\n                )\n            ),\n\n            // c-skin m-valid-invalid-1\n            valid-invalid-1: (\n                pseudo-classes: (\n                    valid: (\n                        border-color: my-color(green-500),\n                        border-width: 2px,\n                        pseudo-elements: (\n                            before: (\n                                selector: '~ * .hint',\n                                content: '\\e932',\n                                color: my-color(green-500)\n                            )\n                        )\n                    ),\n                    invalid: (\n                        border-color: my-color(red-500),\n                        border-width: 2px,\n                        pseudo-elements: (\n                            before: (\n                                selector: '~ * .hint',\n                                content: '\\e934',\n                                color: my-color(red-500)\n                            )\n                        )\n                    )\n                )\n            ),\n            // c-skin m-disabled\n            disabled: (\n                pointer-events: none,\n                color: grey,\n                background-color: lightgrey\n            ),\n            // COLORS\n            c-yellow-100: (\n                color: my-color(yellow-100)\n            ),\n            c-yellow-200: (\n                color: my-color(yellow-200)\n            ),\n            c-yellow-300: (\n                color: my-color(yellow-300)\n            ),\n            c-yellow-400: (\n                color: my-color(yellow-400)\n            ),\n            c-yellow-500: (\n                color: my-color(yellow-500)\n            ),\n            c-yellow-600: (\n                color: my-color(yellow-600)\n            ),\n            c-yellow-700: (\n                color: my-color(yellow-700)\n            ),\n            c-yellow-800: (\n                color: my-color(yellow-800)\n            ),\n            c-yellow-900: (\n                color: my-color(yellow-900)\n            ),\n            c-orange-100: (\n                color: my-color(orange-100)\n            ),\n            c-orange-200: (\n                color: my-color(orange-200)\n            ),\n            c-orange-300: (\n                color: my-color(orange-300)\n            ),\n            c-orange-400: (\n                color: my-color(orange-400)\n            ),\n            c-orange-500: (\n                color: my-color(orange-500)\n            ),\n            c-orange-600: (\n                color: my-color(orange-600)\n            ),\n            c-orange-700: (\n                color: my-color(orange-700)\n            ),\n            c-orange-800: (\n                color: my-color(orange-800)\n            ),\n            c-orange-900: (\n                color: my-color(orange-900)\n            ),\n            c-red-100: (\n                color: my-color(red-100)\n            ),\n            c-red-200: (\n                color: my-color(red-200)\n            ),\n            c-red-300: (\n                color: my-color(red-300)\n            ),\n            c-red-400: (\n                color: my-color(red-400)\n            ),\n            c-red-500: (\n                color: my-color(red-500)\n            ),\n            c-red-600: (\n                color: my-color(red-600)\n            ),\n            c-red-700: (\n                color: my-color(red-700)\n            ),\n            c-red-800: (\n                color: my-color(red-800)\n            ),\n            c-red-900: (\n                color: my-color(red-900)\n            ),\n            c-lime-100: (\n                color: my-color(lime-100)\n            ),\n            c-lime-200: (\n                color: my-color(lime-200)\n            ),\n            c-lime-300: (\n                color: my-color(lime-300)\n            ),\n            c-lime-400: (\n                color: my-color(lime-400)\n            ),\n            c-lime-500: (\n                color: my-color(lime-500)\n            ),\n            c-lime-600: (\n                color: my-color(lime-600)\n            ),\n            c-lime-700: (\n                color: my-color(lime-700)\n            ),\n            c-lime-800: (\n                color: my-color(lime-800)\n            ),\n            c-lime-900: (\n                color: my-color(lime-900)\n            ),\n            c-green-100: (\n                color: my-color(green-100)\n            ),\n            c-green-200: (\n                color: my-color(green-200)\n            ),\n            c-green-300: (\n                color: my-color(green-300)\n            ),\n            c-green-400: (\n                color: my-color(green-400)\n            ),\n            c-green-500: (\n                color: my-color(green-500)\n            ),\n            c-green-600: (\n                color: my-color(green-600)\n            ),\n            c-green-700: (\n                color: my-color(green-700)\n            ),\n            c-green-800: (\n                color: my-color(green-800)\n            ),\n            c-green-900: (\n                color: my-color(green-900)\n            ),\n            c-blue-100: (\n                color: my-color(blue-100)\n            ),\n            c-blue-200: (\n                color: my-color(blue-200)\n            ),\n            c-blue-300: (\n                color: my-color(blue-300)\n            ),\n            c-blue-400: (\n                color: my-color(blue-400)\n            ),\n            c-blue-500: (\n                color: my-color(blue-500)\n            ),\n            c-blue-600: (\n                color: my-color(blue-600)\n            ),\n            c-blue-700: (\n                color: my-color(blue-700)\n            ),\n            c-blue-800: (\n                color: my-color(blue-800)\n            ),\n            c-blue-900: (\n                color: my-color(blue-900)\n            ),\n            c-purple-100: (\n                color: my-color(purple-100)\n            ),\n            c-purple-200: (\n                color: my-color(purple-200)\n            ),\n            c-purple-300: (\n                color: my-color(purple-300)\n            ),\n            c-purple-400: (\n                color: my-color(purple-400)\n            ),\n            c-purple-500: (\n                color: my-color(purple-500)\n            ),\n            c-purple-600: (\n                color: my-color(purple-600)\n            ),\n            c-purple-700: (\n                color: my-color(purple-700)\n            ),\n            c-purple-800: (\n                color: my-color(purple-800)\n            ),\n            c-purple-900: (\n                color: my-color(purple-900)\n            ),\n            c-grey-light-100: (\n                color: my-color(grey-light-100)\n            ),\n            c-grey-light-200: (\n                color: my-color(grey-light-200)\n            ),\n            c-grey-light-300: (\n                color: my-color(grey-light-300)\n            ),\n            c-grey-light-400: (\n                color: my-color(grey-light-400)\n            ),\n            c-grey-light-500: (\n                color: my-color(grey-light-500)\n            ),\n            c-grey-light-600: (\n                color: my-color(grey-light-600)\n            ),\n            c-grey-light-700: (\n                color: my-color(grey-light-700)\n            ),\n            c-grey-light-800: (\n                color: my-color(grey-light-800)\n            ),\n            c-grey-light-900: (\n                color: my-color(grey-light-900)\n            ),\n            c-grey-dark-100: (\n                color: my-color(grey-dark-100)\n            ),\n            c-grey-dark-200: (\n                color: my-color(grey-dark-200)\n            ),\n            c-grey-dark-300: (\n                color: my-color(grey-dark-300)\n            ),\n            c-grey-dark-400: (\n                color: my-color(grey-dark-400)\n            ),\n            c-grey-dark-500: (\n                color: my-color(grey-dark-500)\n            ),\n            c-grey-dark-600: (\n                color: my-color(grey-dark-600)\n            ),\n            c-grey-dark-700: (\n                color: my-color(grey-dark-700)\n            ),\n            c-grey-dark-800: (\n                color: my-color(grey-dark-800)\n            ),\n            c-grey-dark-900: (\n                color: my-color(grey-dark-900)\n            ),\n            // BACKGROUND COLOR\n            bc-yellow-100: (\n                background-color: my-color(yellow-100)\n            ),\n            bc-yellow-200: (\n                background-color: my-color(yellow-200)\n            ),\n            bc-yellow-300: (\n                background-color: my-color(yellow-300)\n            ),\n            bc-yellow-400: (\n                background-color: my-color(yellow-400)\n            ),\n            bc-yellow-500: (\n                background-color: my-color(yellow-500)\n            ),\n            bc-yellow-600: (\n                background-color: my-color(yellow-600)\n            ),\n            bc-yellow-700: (\n                background-color: my-color(yellow-700)\n            ),\n            bc-yellow-800: (\n                background-color: my-color(yellow-800)\n            ),\n            bc-yellow-900: (\n                background-color: my-color(yellow-900)\n            ),\n            bc-orange-100: (\n                background-color: my-color(orange-100)\n            ),\n            bc-orange-200: (\n                background-color: my-color(orange-200)\n            ),\n            bc-orange-300: (\n                background-color: my-color(orange-300)\n            ),\n            bc-orange-400: (\n                background-color: my-color(orange-400)\n            ),\n            bc-orange-500: (\n                background-color: my-color(orange-500)\n            ),\n            bc-orange-600: (\n                background-color: my-color(orange-600)\n            ),\n            bc-orange-700: (\n                background-color: my-color(orange-700)\n            ),\n            bc-orange-800: (\n                background-color: my-color(orange-800)\n            ),\n            bc-orange-900: (\n                background-color: my-color(orange-900)\n            ),\n            bc-red-100: (\n                background-color: my-color(red-100)\n            ),\n            bc-red-200: (\n                background-color: my-color(red-200)\n            ),\n            bc-red-300: (\n                background-color: my-color(red-300)\n            ),\n            bc-red-400: (\n                background-color: my-color(red-400)\n            ),\n            bc-red-500: (\n                background-color: my-color(red-500)\n            ),\n            bc-red-600: (\n                background-color: my-color(red-600)\n            ),\n            bc-red-700: (\n                background-color: my-color(red-700)\n            ),\n            bc-red-800: (\n                background-color: my-color(red-800)\n            ),\n            bc-red-900: (\n                background-color: my-color(red-900)\n            ),\n            bc-lime-100: (\n                background-color: my-color(lime-100)\n            ),\n            bc-lime-200: (\n                background-color: my-color(lime-200)\n            ),\n            bc-lime-300: (\n                background-color: my-color(lime-300)\n            ),\n            bc-lime-400: (\n                background-color: my-color(lime-400)\n            ),\n            bc-lime-500: (\n                background-color: my-color(lime-500)\n            ),\n            bc-lime-600: (\n                background-color: my-color(lime-600)\n            ),\n            bc-lime-700: (\n                background-color: my-color(lime-700)\n            ),\n            bc-lime-800: (\n                background-color: my-color(lime-800)\n            ),\n            bc-lime-900: (\n                background-color: my-color(lime-900)\n            ),\n            bc-green-100: (\n                background-color: my-color(green-100)\n            ),\n            bc-green-200: (\n                background-color: my-color(green-200)\n            ),\n            bc-green-300: (\n                background-color: my-color(green-300)\n            ),\n            bc-green-400: (\n                background-color: my-color(green-400)\n            ),\n            bc-green-500: (\n                background-color: my-color(green-500)\n            ),\n            bc-green-600: (\n                background-color: my-color(green-600)\n            ),\n            bc-green-700: (\n                background-color: my-color(green-700)\n            ),\n            bc-green-800: (\n                background-color: my-color(green-800)\n            ),\n            bc-green-900: (\n                background-color: my-color(green-900)\n            ),\n            bc-blue-100: (\n                background-color: my-color(blue-100)\n            ),\n            bc-blue-200: (\n                background-color: my-color(blue-200)\n            ),\n            bc-blue-300: (\n                background-color: my-color(blue-300)\n            ),\n            bc-blue-400: (\n                background-color: my-color(blue-400)\n            ),\n            bc-blue-500: (\n                background-color: my-color(blue-500)\n            ),\n            bc-blue-600: (\n                background-color: my-color(blue-600)\n            ),\n            bc-blue-700: (\n                background-color: my-color(blue-700)\n            ),\n            bc-blue-800: (\n                background-color: my-color(blue-800)\n            ),\n            bc-blue-900: (\n                background-color: my-color(blue-900)\n            ),\n            bc-purple-100: (\n                background-color: my-color(blue-100)\n            ),\n            bc-purple-200: (\n                background-color: my-color(purple-200)\n            ),\n            bc-purple-300: (\n                background-color: my-color(purple-300)\n            ),\n            bc-purple-400: (\n                background-color: my-color(purple-400)\n            ),\n            bc-purple-500: (\n                background-color: my-color(purple-500)\n            ),\n            bc-purple-600: (\n                background-color: my-color(purple-600)\n            ),\n            bc-purple-700: (\n                background-color: my-color(purple-700)\n            ),\n            bc-purple-800: (\n                background-color: my-color(purple-800)\n            ),\n            bc-purple-900: (\n                background-color: my-color(purple-900)\n            ),\n            bc-grey-light-100: (\n                background-color: my-color(grey-light-100)\n            ),\n            bc-grey-light-200: (\n                background-color: my-color(grey-light-200)\n            ),\n            bc-grey-light-300: (\n                background-color: my-color(grey-light-300)\n            ),\n            bc-grey-light-400: (\n                background-color: my-color(grey-light-400)\n            ),\n            bc-grey-light-500: (\n                background-color: my-color(grey-light-500)\n            ),\n            bc-grey-light-600: (\n                background-color: my-color(grey-light-600)\n            ),\n            bc-grey-light-700: (\n                background-color: my-color(grey-light-700)\n            ),\n            bc-grey-light-800: (\n                background-color: my-color(grey-light-800)\n            ),\n            bc-grey-light-900: (\n                background-color: my-color(grey-light-900)\n            ),\n            bc-grey-dark-100: (\n                background-color: my-color(grey-dark-100)\n            ),\n            bc-grey-dark-200: (\n                background-color: my-color(grey-dark-200)\n            ),\n            bc-grey-dark-300: (\n                background-color: my-color(grey-dark-300)\n            ),\n            bc-grey-dark-400: (\n                background-color: my-color(grey-dark-400)\n            ),\n            bc-grey-dark-500: (\n                background-color: my-color(grey-dark-500)\n            ),\n            bc-grey-dark-600: (\n                background-color: my-color(grey-dark-600)\n            ),\n            bc-grey-dark-700: (\n                background-color: my-color(grey-dark-700)\n            ),\n            bc-grey-dark-800: (\n                background-color: my-color(grey-dark-800)\n            ),\n            bc-grey-dark-900: (\n                background-color: my-color(grey-dark-900)\n            ),\n            brad-1: (\n                border-radius: my-border-radius(1)\n            ),\n            brad-2: (\n                border-radius: my-border-radius(2)\n            ),\n            brad-3: (\n                border-radius: my-border-radius(3)\n            ),\n            brad-4: (\n                border-radius: my-border-radius(4)\n            ),\n            brad-5: (\n                border-radius: my-border-radius(5)\n            ),\n            brad-6: (\n                border-radius: my-border-radius(6)\n            ),\n            brad-7: (\n                border-radius: my-border-radius(7)\n            ),\n            brad-8: (\n                border-radius: my-border-radius(8)\n            ),\n            brad-9: (\n                border-radius: my-border-radius(9)\n            ),\n            brad-10: (\n                border-radius: my-border-radius(10)\n            ),\n            bradtl-1: (\n                border-top-left-radius: my-border-radius(1)\n            ),\n            bradtl-2: (\n                border-top-left-radius: my-border-radius(2)\n            ),\n            bradtl-3: (\n                border-top-left-radius: my-border-radius(3)\n            ),\n            bradtl-4: (\n                border-top-left-radius: my-border-radius(4)\n            ),\n            bradtl-5: (\n                border-top-left-radius: my-border-radius(5)\n            ),\n            bradtl-6: (\n                border-top-left-radius: my-border-radius(6)\n            ),\n            bradtl-7: (\n                border-top-left-radius: my-border-radius(7)\n            ),\n            bradtl-8: (\n                border-top-left-radius: my-border-radius(8)\n            ),\n            bradtl-9: (\n                border-top-left-radius: my-border-radius(9)\n            ),\n            bradtr-1: (\n                border-top-right-radius: my-border-radius(1)\n            ),\n            bradtr-2: (\n                border-top-right-radius: my-border-radius(2)\n            ),\n            bradtr-3: (\n                border-top-right-radius: my-border-radius(3)\n            ),\n            bradtr-4: (\n                border-top-right-radius: my-border-radius(4)\n            ),\n            bradtr-5: (\n                border-top-right-radius: my-border-radius(5)\n            ),\n            bradtr-6: (\n                border-top-right-radius: my-border-radius(6)\n            ),\n            bradtr-7: (\n                border-top-right-radius: my-border-radius(7)\n            ),\n            bradtr-8: (\n                border-top-right-radius: my-border-radius(8)\n            ),\n            bradtr-9: (\n                border-top-right-radius: my-border-radius(9)\n            ),\n            bradbr-1: (\n                border-bottom-right-radius: my-border-radius(1)\n            ),\n            bradbr-2: (\n                border-bottom-right-radius: my-border-radius(2)\n            ),\n            bradbr-3: (\n                border-bottom-right-radius: my-border-radius(3)\n            ),\n            bradbr-4: (\n                border-bottom-right-radius: my-border-radius(4)\n            ),\n            bradbr-5: (\n                border-bottom-right-radius: my-border-radius(5)\n            ),\n            bradbr-6: (\n                border-bottom-right-radius: my-border-radius(6)\n            ),\n            bradbr-7: (\n                border-bottom-right-radius: my-border-radius(7)\n            ),\n            bradbr-8: (\n                border-bottom-right-radius: my-border-radius(8)\n            ),\n            bradbr-9: (\n                border-bottom-right-radius: my-border-radius(9)\n            ),\n            bradbl-1: (\n                border-bottom-left-radius: my-border-radius(1)\n            ),\n            bradbl-2: (\n                border-bottom-left-radius: my-border-radius(2)\n            ),\n            bradbl-3: (\n                border-bottom-left-radius: my-border-radius(3)\n            ),\n            bradbl-4: (\n                border-bottom-left-radius: my-border-radius(4)\n            ),\n            bradbl-5: (\n                border-bottom-left-radius: my-border-radius(5)\n            ),\n            bradbl-6: (\n                border-bottom-left-radius: my-border-radius(6)\n            ),\n            bradbl-7: (\n                border-bottom-left-radius: my-border-radius(7)\n            ),\n            bradbl-8: (\n                border-bottom-left-radius: my-border-radius(8)\n            ),\n            bradbl-9: (\n                border-bottom-left-radius: my-border-radius(9)\n            ),\n            bs-1: (\n                box-shadow: my-shadow(1)\n            ),\n            bs-2: (\n                box-shadow: my-shadow(2)\n            ),\n            bs-3: (\n                box-shadow: my-shadow(3)\n            ),\n            bs-4: (\n                box-shadow: my-shadow(4)\n            ),\n            bs-5: (\n                box-shadow: my-shadow(5)\n            ),\n            bs-6: (\n                box-shadow: my-shadow(6)\n            )\n        )\n    )\n);",
		"\n\n/*\n    GENERIC COMPONENT\n    Briks generic component\n    ---\n*/\n\n@if $briks-components-prefix != '' \nand $briks-components-prefix != false \nand $briks-modifiers-prefix != '' \nand $briks-modifiers-prefix != false \nand length($briks-components-generic) > 0 {\n    // Iterate generic components list\n    @each $component_name, $component_data in $briks-components-generic {\n        // Component must be enabled\n        @if map-get($component_data, enabled) == true {\n            // Optional selector for defaults\n            $optional_selector_defaults: '';\n            @if type-of(map-get(map-get($component_data, defaults), selector)) == string {\n                $optional_selector_defaults: map-get(map-get($component_data, defaults), selector);\n            }\n            // Component's class name\n            .#{$briks-components-prefix}#{$component_name}#{unquote($optional_selector_defaults)} {\n                // Iterate component default properties\n                // If component defaults are set\n                @if type-of(map-get($component_data, defaults)) == map and length(map-get($component_data, defaults)) > 0 {\n                    @each $property, $value in map-get($component_data, defaults) {\n                        // Default pseudo classes\n                        @if $property == 'pseudo-classes' and type-of($value) == map {\n                            @each $pseudo_class_name, $pseudo_class_data in $value {\n                                @if type-of($pseudo_class_data) == map {\n\n                                    // Optional selector for this pseudo-class on defaults\n                                    $optional_selector_pseudo_class: '';\n                                    @if type-of(map-get($pseudo_class_data, selector)) == string {\n                                        $optional_selector_pseudo_class: map-get($pseudo_class_data, selector);\n                                    }\n                                    // Pseudo class\n                                    &:#{$pseudo_class_name}#{unquote($optional_selector_pseudo_class)} {\n                                        @each $pseudo_class_property, $pseudo_class_value in $pseudo_class_data {\n                                            // Détection scope composant\n                                            $briks_scope_check: briks-scope($component_name, $pseudo_class_property);\n                                            @if $briks_scope_check != false {\n                                                @warn $briks_scope_check;\n                                            }\n                                            @if $pseudo_class_property == 'pseudo-elements' and type-of($pseudo_class_value) == map {\n                                                // If pseudo class is combined with pseudo element (for example :hover::after)\n                                                @each $pseudo_element_name, $pseudo_element_names_and_values in $pseudo_class_value {\n                                                    // Optional selector for this pseudo-element on this pseudo-class on defaults\n                                                    $optional_selector_pseudo_element: '';\n                                                    @if type-of(map-get($pseudo_element_names_and_values, selector)) == string {\n                                                        $optional_selector_pseudo_element: map-get($pseudo_element_names_and_values, selector);\n                                                    }\n                                                    // Pseudo element\n                                                    &#{unquote($optional_selector_pseudo_element)}::#{$pseudo_element_name} {\n                                                        @each $pseudo_element_property, $pseudo_element_value in $pseudo_element_names_and_values {\n                                                            // Détection scope composant\n                                                            $briks_scope_check: briks-scope($component_name, $pseudo_element_property);\n                                                            @if $briks_scope_check != false {\n                                                                @warn $briks_scope_check;\n                                                            }\n                                                            // Unquote value excepting 'content' property\n                                                            @if type-of($pseudo_element_value) == 'string' and $pseudo_element_property != 'content' {\n                                                                $pseudo_element_value: unquote($pseudo_element_value);\n                                                            }\n                                                            // Force quote for content property\n                                                            @if ($pseudo_element_property == 'content') {\n                                                                $pseudo_element_value: quote($pseudo_element_value);\n                                                            }\n                                                            @if ($pseudo_element_property != 'selector') {\n                                                                #{$pseudo_element_property}: $pseudo_element_value;\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            } @else {\n                                                // Standard CSS property\n                                                @if type-of($pseudo_class_value) == 'string' {\n                                                    $pseudo_class_value: unquote($pseudo_class_value);\n                                                }\n                                                @if ($pseudo_class_property != 'selector') {\n                                                    #{$pseudo_class_property}: $pseudo_class_value;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            } \n                        } \n                        // Default pseudo elements\n                        @else if $property == 'pseudo-elements' and type-of($value) == map {\n                            @each $pseudo_element_name, $pseudo_element_names_and_values in $value {\n                                @if type-of($pseudo_element_names_and_values) == map {\n                                    // Optional selector for this pseudo-element on defaults\n                                    $optional_selector_pseudo_element: '';\n                                    @if type-of(map-get($pseudo_element_names_and_values, selector)) == string {\n                                        $optional_selector_pseudo_element: map-get($pseudo_element_names_and_values, selector);\n                                    }\n                                    // Pseudo element\n                                    &#{unquote($optional_selector_pseudo_element)}::#{$pseudo_element_name} {\n                                        @each $pseudo_element_property, $pseudo_element_value in $pseudo_element_names_and_values {\n                                            // Détection scope composant\n                                            $briks_scope_check: briks-scope($component_name, $pseudo_element_property);\n                                            @if $briks_scope_check != false {\n                                                @warn $briks_scope_check;\n                                            }\n                                            // Unquote value excepting 'content' property\n                                            @if type-of($pseudo_element_value) == 'string' and $pseudo_element_property != 'content' {\n                                                $pseudo_element_value: unquote($pseudo_element_value);\n                                            }\n                                            // Force quote for content property\n                                            @if ($pseudo_element_property == 'content') {\n                                                $pseudo_element_value: quote($pseudo_element_value);\n                                            }\n                                            @if ($pseudo_element_property != 'selector') {\n                                                #{$pseudo_element_property}: $pseudo_element_value;\n                                            }\n                                        }\n                                    }\n                                }\n                            } \n                        } \n                        // Default properties and values\n                        @else {\n                            @if type-of($value) != map {\n                                @if type-of($value) == 'string' {\n                                    $value: unquote($value);\n                                }\n                                @if ($property != 'selector') {\n                                    #{$property}: $value;\n                                }\n                            }\n                        }\n                    }\n                }\n                // If modifiers are set\n                @if type-of(map-get($component_data, modifiers)) == map and length(map-get($component_data, modifiers)) > 0 {\n                    // Iterate component modifiers properties\n                    @each $modifier_name, $modifier_data in map-get($component_data, modifiers) {\n                        // Optional selector for this modifier\n                        $optional_selector_modifier: '';\n                        @if type-of(map-get($modifier_data, selector)) == string {\n                            $optional_selector_modifier: map-get($modifier_data, selector);\n                        }\n                        &.#{$briks-modifiers-prefix}#{$modifier_name}#{unquote($optional_selector_modifier)} {\n                            @each $property, $value in $modifier_data {\n                                // Détection scope composant\n                                $briks_scope_check: briks-scope($component_name, $property);\n                                @if $briks_scope_check != false {\n                                    @warn $briks_scope_check;\n                                }\n                                // Modifier pseudo classes\n                                @if $property == 'pseudo-classes' and type-of($value) == map {\n                                    @each $pseudo_class_name, $pseudo_class_data in $value {\n                                        // Optional selector for this pseudo-class on this modifier\n                                        $optional_selector_modifier_pseudo_class: '';\n                                        @if type-of(map-get($pseudo_class_data, selector)) == string {\n                                            $optional_selector_modifier_pseudo_class: map-get($pseudo_class_data, selector);\n                                        }\n                                        @if type-of($pseudo_class_data) == map {\n                                            // Modifier pseudo class\n                                            &:#{$pseudo_class_name}#{unquote($optional_selector_modifier_pseudo_class)} {\n                                                @each $pseudo_class_property, $pseudo_class_value in $pseudo_class_data {\n                                                    // Détection scope composant\n                                                    $briks_scope_check: briks-scope($component_name, $pseudo_class_property);\n                                                    @if $briks_scope_check != false {\n                                                        @warn $briks_scope_check;\n                                                    }\n                                                    @if $pseudo_class_property == 'pseudo-elements' and type-of($pseudo_class_value) == map {\n                                                        // If pseudo class is combined with pseudo element (for example :hover::after)\n                                                        @each $pseudo_element_name, $pseudo_element_names_and_values in $pseudo_class_value {\n                                                            // Optional selector for this pseudo-element for this pseudo-class on this modifier\n                                                            $optional_selector_modifier_pseudo_class_pseudo_element: '';\n                                                            @if type-of(map-get($pseudo_element_names_and_values, selector)) == string {\n                                                                $optional_selector_modifier_pseudo_class_pseudo_element: map-get($pseudo_element_names_and_values, selector);\n                                                            }\n                                                            // Modifier pseudo element\n                                                            &#{unquote($optional_selector_modifier_pseudo_class_pseudo_element)}::#{$pseudo_element_name} {\n                                                                @each $pseudo_element_property, $pseudo_element_value in $pseudo_element_names_and_values {\n                                                                    // Détection scope composant\n                                                                    $briks_scope_check: briks-scope($component_name, $pseudo_element_property);\n                                                                    @if $briks_scope_check != false {\n                                                                        @warn $briks_scope_check;\n                                                                    }\n                                                                    // Unquote value excepting 'content' property\n                                                                    @if type-of($pseudo_element_value) == 'string' and $pseudo_element_property != 'content' {\n                                                                        $pseudo_element_value: unquote($pseudo_element_value);\n                                                                    }\n                                                                    // Force quote for content property\n                                                                    @if ($pseudo_element_property == 'content') {\n                                                                        $pseudo_element_value: quote($pseudo_element_value);\n                                                                    }\n                                                                    @if ($pseudo_element_property != 'selector') {\n                                                                        #{$pseudo_element_property}: $pseudo_element_value;\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    } @else {\n                                                        // Standard CSS property\n                                                        @if type-of($pseudo_class_value) == 'string' {\n                                                            $pseudo_class_value: unquote($pseudo_class_value);\n                                                        }\n                                                        @if ($pseudo_class_property != 'selector') {\n                                                            #{$pseudo_class_property}: $pseudo_class_value;\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    } \n                                } \n                                // Modifier pseudo elements\n                                @else if $property == 'pseudo-elements' and type-of($value) == map {\n                                    @each $pseudo_element_name, $pseudo_element_names_and_values in $value {\n                                        @if type-of($pseudo_element_names_and_values) == map {\n                                            // Optional selector for this pseudo-element for this modifier\n                                            $optional_selector_modifier_pseudo_element: '';\n                                            @if type-of(map-get($pseudo_element_names_and_values, selector)) == string {\n                                                $optional_selector_modifier_pseudo_element: map-get($pseudo_element_names_and_values, selector);\n                                            }\n                                            // Modifier pseudo element\n                                            &#{unquote($optional_selector_modifier_pseudo_element)}::#{$pseudo_element_name} {\n                                                @each $pseudo_element_property, $pseudo_element_value in $pseudo_element_names_and_values {\n                                                    // Détection scope composant\n                                                    $briks_scope_check: briks-scope($component_name, $pseudo_element_property);\n                                                    @if $briks_scope_check != false {\n                                                        @warn $briks_scope_check;\n                                                    }\n                                                    // Unquote value excepting 'content' property\n                                                    @if type-of($pseudo_element_value) == 'string' and $pseudo_element_property != 'content' {\n                                                        $pseudo_element_value: unquote($pseudo_element_value);\n                                                    }\n                                                    // Force quote for content property\n                                                    @if ($pseudo_element_property == 'content') {\n                                                        $pseudo_element_value: quote($pseudo_element_value);\n                                                    }\n                                                    @if ($pseudo_element_property != 'selector') {\n                                                        #{$pseudo_element_property}: $pseudo_element_value;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    } \n                                } \n                                // Modifier properties and values\n                                @else {\n                                    @if type-of($value) != map {\n                                        @if type-of($value) == 'string' {\n                                            $value: unquote($value);\n                                        }\n                                        @if ($property != 'selector') {\n                                            #{$property}: $value;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                // Responsive\n                @if map-get($component_data, responsive) == true {\n                    @each $screen, $value in $briks-screen-sizes {\n                        @include my-screen-size($screen) {\n                            // If modifiers are set\n                            @if type-of(map-get($component_data, modifiers)) == map and length(map-get($component_data, modifiers)) > 0 {\n                                // Iterate component modifiers properties\n                                @each $modifier_name, $modifier_data in map-get($component_data, modifiers) {\n                                    // Optional selector for defaults\n                                    $optional_selector_defaults: '';\n                                    @if type-of(map-get(map-get($component_data, defaults), selector)) == string {\n                                        $optional_selector_defaults: map-get(map-get($component_data, defaults), selector);\n                                    }\n                                    &.#{$briks-modifiers-prefix}#{$modifier_name}#{$briks-responsive-prefix}#{$screen}#{unquote($optional_selector_defaults)},\n                                    &[#{$briks-modifiers-prefix}#{$modifier_name}*=\"#{$screen}\"]#{unquote($optional_selector_defaults)} {\n                                        @each $property, $value in $modifier_data {\n                                            // Responsive modifier pseudo classes\n                                            @if $property == 'pseudo-classes' and type-of($value) == map {\n                                                @each $pseudo_class_name, $pseudo_class_data in $value {\n                                                    @if type-of($pseudo_class_data) == map {\n                                                        // Optional selector for this pseudo-class on defaults\n                                                        $optional_selector_pseudo_class: '';\n                                                        @if type-of(map-get($pseudo_class_data, selector)) == string {\n                                                            $optional_selector_pseudo_class: map-get($pseudo_class_data, selector);\n                                                        }\n                                                        // Responsive modifier pseudo class\n                                                        &:#{$pseudo_class_name}#{unquote($optional_selector_pseudo_class)} {\n                                                            @each $pseudo_class_property, $pseudo_class_value in $pseudo_class_data {\n                                                                @if $pseudo_class_property == 'pseudo-elements' and type-of($pseudo_class_value) == map {\n                                                                    // If pseudo class is combined with pseudo element (for example :hover::after)\n                                                                    @each $pseudo_element_name, $pseudo_element_names_and_values in $pseudo_class_value {\n                                                                        // Optional selector for this pseudo-element on this pseudo-class on defaults\n                                                                        $optional_selector_pseudo_element: '';\n                                                                        @if type-of(map-get($pseudo_element_names_and_values, selector)) == string {\n                                                                            $optional_selector_pseudo_element: map-get($pseudo_element_names_and_values, selector);\n                                                                        }\n                                                                        // Responsive modifier pseudo element\n                                                                        &#{unquote($optional_selector_pseudo_element)}::#{$pseudo_element_name} {\n                                                                            @each $pseudo_element_property, $pseudo_element_value in $pseudo_element_names_and_values {\n                                                                                // Unquote value excepting 'content' property\n                                                                                @if type-of($pseudo_element_value) == 'string' and $pseudo_element_property != 'content' {\n                                                                                    $pseudo_element_value: unquote($pseudo_element_value);\n                                                                                }\n                                                                                // Force quote for content property\n                                                                                @if ($pseudo_element_property == 'content') {\n                                                                                    $pseudo_element_value: quote($pseudo_element_value);\n                                                                                }\n                                                                                @if ($pseudo_element_property != 'selector') {\n                                                                                    #{$pseudo_element_property}: $pseudo_element_value;\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                } @else {\n                                                                    // Standard CSS property\n                                                                    @if type-of($pseudo_class_value) == 'string' {\n                                                                        $pseudo_class_value: unquote($pseudo_class_value);\n                                                                    }\n                                                                    @if ($pseudo_class_property != 'selector') {\n                                                                        #{$pseudo_class_property}: $pseudo_class_value;\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                } \n                                            } \n                                            // Responsive modifier pseudo elements\n                                            @else if $property == 'pseudo-elements' and type-of($value) == map {\n                                                @each $pseudo_element_name, $pseudo_element_names_and_values in $value {\n                                                    @if type-of($pseudo_element_names_and_values) == map {\n                                                        // Optional selector for this pseudo-element on defaults\n                                                        $optional_selector_pseudo_element: '';\n                                                        @if type-of(map-get($pseudo_element_names_and_values, selector)) == string {\n                                                            $optional_selector_pseudo_element: map-get($pseudo_element_names_and_values, selector);\n                                                        }\n                                                        // Responsive modifier pseudo element\n                                                        &#{unquote($optional_selector_pseudo_element)}::#{$pseudo_element_name} {\n                                                            @each $pseudo_element_property, $pseudo_element_value in $pseudo_element_names_and_values {\n                                                                // Unquote value excepting 'content' property\n                                                                @if type-of($pseudo_element_value) == 'string' and $pseudo_element_property != 'content' {\n                                                                    $pseudo_element_value: unquote($pseudo_element_value);\n                                                                }\n                                                                // Force quote for content property\n                                                                @if ($pseudo_element_property == 'content') {\n                                                                    $pseudo_element_value: quote($pseudo_element_value);\n                                                                }\n                                                                @if ($pseudo_element_property != 'selector') {\n                                                                    #{$pseudo_element_property}: $pseudo_element_value;\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                } \n                                            } \n                                            // Responsive modifier properties and values\n                                            @else {\n                                                @if type-of($value) != map {\n                                                    @if type-of($value) == 'string' {\n                                                        $value: unquote($value);\n                                                    }\n                                                    @if ($property != 'selector') {\n                                                        #{$property}: $value;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
	],
	"names": [],
	"mappings": "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"
}